
Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ee2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000028e  00800060  00000ee2  00000f76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002a  008002ee  008002ee  00001204  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001204  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001260  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  0000129c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001970  00000000  00000000  0000133c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007da  00000000  00000000  00002cac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009cf  00000000  00000000  00003486  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000023c  00000000  00000000  00003e58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047e  00000000  00000000  00004094  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010c0  00000000  00000000  00004512  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  000055d2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 d1 03 	jmp	0x7a2	; 0x7a2 <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ee       	ldi	r30, 0xE2	; 226
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 3e       	cpi	r26, 0xEE	; 238
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	23 e0       	ldi	r18, 0x03	; 3
  78:	ae ee       	ldi	r26, 0xEE	; 238
  7a:	b2 e0       	ldi	r27, 0x02	; 2
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 31       	cpi	r26, 0x18	; 24
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 09 04 	call	0x812	; 0x812 <main>
  8a:	0c 94 6f 07 	jmp	0xede	; 0xede <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Timer1_Init>:
			_delay_ms(20);
		}
	}
	Door_Num=0;
	return (Tries<3);
}
  92:	9c 01       	movw	r18, r24
  94:	8e b5       	in	r24, 0x2e	; 46
  96:	88 60       	ori	r24, 0x08	; 8
  98:	8e bd       	out	0x2e, r24	; 46
  9a:	8e b5       	in	r24, 0x2e	; 46
  9c:	83 60       	ori	r24, 0x03	; 3
  9e:	8e bd       	out	0x2e, r24	; 46
  a0:	03 2e       	mov	r0, r19
  a2:	00 0c       	add	r0, r0
  a4:	44 0b       	sbc	r20, r20
  a6:	55 0b       	sbc	r21, r21
  a8:	67 e4       	ldi	r22, 0x47	; 71
  aa:	78 ee       	ldi	r23, 0xE8	; 232
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	0e 94 3d 04 	call	0x87a	; 0x87a <__divmodsi4>
  b4:	3b bd       	out	0x2b, r19	; 43
  b6:	2a bd       	out	0x2a, r18	; 42
  b8:	89 b7       	in	r24, 0x39	; 57
  ba:	80 61       	ori	r24, 0x10	; 16
  bc:	89 bf       	out	0x39, r24	; 57
  be:	78 94       	sei
  c0:	08 95       	ret

000000c2 <CheckPlayers>:
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	c0 55       	subi	r28, 0x50	; 80
  cc:	d1 09       	sbc	r29, r1
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	f8 94       	cli
  d2:	de bf       	out	0x3e, r29	; 62
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	80 e1       	ldi	r24, 0x10	; 16
  da:	e1 e9       	ldi	r30, 0x91	; 145
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	de 01       	movw	r26, r28
  e0:	11 96       	adiw	r26, 0x01	; 1
  e2:	01 90       	ld	r0, Z+
  e4:	0d 92       	st	X+, r0
  e6:	8a 95       	dec	r24
  e8:	e1 f7       	brne	.-8      	; 0xe2 <CheckPlayers+0x20>
  ea:	8e e0       	ldi	r24, 0x0E	; 14
  ec:	e1 e6       	ldi	r30, 0x61	; 97
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	de 01       	movw	r26, r28
  f2:	51 96       	adiw	r26, 0x11	; 17
  f4:	01 90       	ld	r0, Z+
  f6:	0d 92       	st	X+, r0
  f8:	8a 95       	dec	r24
  fa:	e1 f7       	brne	.-8      	; 0xf4 <CheckPlayers+0x32>
  fc:	18 a2       	std	Y+32, r1	; 0x20
  fe:	1f 8e       	std	Y+31, r1	; 0x1f
 100:	8c e0       	ldi	r24, 0x0C	; 12
 102:	e1 e7       	ldi	r30, 0x71	; 113
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	de 01       	movw	r26, r28
 108:	91 96       	adiw	r26, 0x21	; 33
 10a:	01 90       	ld	r0, Z+
 10c:	0d 92       	st	X+, r0
 10e:	8a 95       	dec	r24
 110:	e1 f7       	brne	.-8      	; 0x10a <CheckPlayers+0x48>
 112:	fe 01       	movw	r30, r28
 114:	bd 96       	adiw	r30, 0x2d	; 45
 116:	84 e0       	ldi	r24, 0x04	; 4
 118:	df 01       	movw	r26, r30
 11a:	1d 92       	st	X+, r1
 11c:	8a 95       	dec	r24
 11e:	e9 f7       	brne	.-6      	; 0x11a <CheckPlayers+0x58>
 120:	80 e1       	ldi	r24, 0x10	; 16
 122:	e1 ea       	ldi	r30, 0xA1	; 161
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	de 01       	movw	r26, r28
 128:	d1 96       	adiw	r26, 0x31	; 49
 12a:	01 90       	ld	r0, Z+
 12c:	0d 92       	st	X+, r0
 12e:	8a 95       	dec	r24
 130:	e1 f7       	brne	.-8      	; 0x12a <CheckPlayers+0x68>
 132:	89 e0       	ldi	r24, 0x09	; 9
 134:	e1 e8       	ldi	r30, 0x81	; 129
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	de 01       	movw	r26, r28
 13a:	af 5b       	subi	r26, 0xBF	; 191
 13c:	bf 4f       	sbci	r27, 0xFF	; 255
 13e:	01 90       	ld	r0, Z+
 140:	0d 92       	st	X+, r0
 142:	8a 95       	dec	r24
 144:	e1 f7       	brne	.-8      	; 0x13e <CheckPlayers+0x7c>
 146:	fe 01       	movw	r30, r28
 148:	e6 5b       	subi	r30, 0xB6	; 182
 14a:	ff 4f       	sbci	r31, 0xFF	; 255
 14c:	87 e0       	ldi	r24, 0x07	; 7
 14e:	df 01       	movw	r26, r30
 150:	1d 92       	st	X+, r1
 152:	8a 95       	dec	r24
 154:	e9 f7       	brne	.-6      	; 0x150 <CheckPlayers+0x8e>
 156:	80 e0       	ldi	r24, 0x00	; 0
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	20 e0       	ldi	r18, 0x00	; 0
 15c:	06 c0       	rjmp	.+12     	; 0x16a <CheckPlayers+0xa8>
 15e:	fc 01       	movw	r30, r24
 160:	ee 5f       	subi	r30, 0xFE	; 254
 162:	fc 4f       	sbci	r31, 0xFC	; 252
 164:	30 81       	ld	r19, Z
 166:	23 0f       	add	r18, r19
 168:	01 96       	adiw	r24, 0x01	; 1
 16a:	85 30       	cpi	r24, 0x05	; 5
 16c:	91 05       	cpc	r25, r1
 16e:	bc f3       	brlt	.-18     	; 0x15e <CheckPlayers+0x9c>
 170:	30 91 f0 02 	lds	r19, 0x02F0	; 0x8002f0 <Door_Num>
 174:	8b ea       	ldi	r24, 0xAB	; 171
 176:	38 9f       	mul	r19, r24
 178:	81 2d       	mov	r24, r1
 17a:	11 24       	eor	r1, r1
 17c:	86 95       	lsr	r24
 17e:	86 95       	lsr	r24
 180:	98 2f       	mov	r25, r24
 182:	99 0f       	add	r25, r25
 184:	89 0f       	add	r24, r25
 186:	98 2f       	mov	r25, r24
 188:	99 0f       	add	r25, r25
 18a:	83 2f       	mov	r24, r19
 18c:	89 1b       	sub	r24, r25
 18e:	80 93 f0 02 	sts	0x02F0, r24	; 0x8002f0 <Door_Num>
 192:	90 91 60 00 	lds	r25, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 196:	99 23       	and	r25, r25
 198:	09 f4       	brne	.+2      	; 0x19c <CheckPlayers+0xda>
 19a:	45 c0       	rjmp	.+138    	; 0x226 <CheckPlayers+0x164>
 19c:	21 30       	cpi	r18, 0x01	; 1
 19e:	71 f5       	brne	.+92     	; 0x1fc <CheckPlayers+0x13a>
 1a0:	e8 2f       	mov	r30, r24
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	ee 5f       	subi	r30, 0xFE	; 254
 1a6:	fc 4f       	sbci	r31, 0xFC	; 252
 1a8:	90 81       	ld	r25, Z
 1aa:	99 23       	and	r25, r25
 1ac:	19 f0       	breq	.+6      	; 0x1b4 <CheckPlayers+0xf2>
 1ae:	10 92 ee 02 	sts	0x02EE, r1	; 0x8002ee <__data_end>
 1b2:	4b c0       	rjmp	.+150    	; 0x24a <CheckPlayers+0x188>
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	90 93 ee 02 	sts	0x02EE, r25	; 0x8002ee <__data_end>
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	1c c0       	rjmp	.+56     	; 0x1f6 <CheckPlayers+0x134>
 1be:	e9 2f       	mov	r30, r25
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	ee 5f       	subi	r30, 0xFE	; 254
 1c4:	fc 4f       	sbci	r31, 0xFC	; 252
 1c6:	20 81       	ld	r18, Z
 1c8:	22 23       	and	r18, r18
 1ca:	a1 f0       	breq	.+40     	; 0x1f4 <CheckPlayers+0x132>
 1cc:	98 17       	cp	r25, r24
 1ce:	50 f4       	brcc	.+20     	; 0x1e4 <CheckPlayers+0x122>
 1d0:	86 30       	cpi	r24, 0x06	; 6
 1d2:	41 f0       	breq	.+16     	; 0x1e4 <CheckPlayers+0x122>
 1d4:	be 01       	movw	r22, r28
 1d6:	6f 5b       	subi	r22, 0xBF	; 191
 1d8:	7f 4f       	sbci	r23, 0xFF	; 255
 1da:	82 ef       	ldi	r24, 0xF2	; 242
 1dc:	92 e0       	ldi	r25, 0x02	; 2
 1de:	0e 94 7e 04 	call	0x8fc	; 0x8fc <strcpy>
 1e2:	33 c0       	rjmp	.+102    	; 0x24a <CheckPlayers+0x188>
 1e4:	be 01       	movw	r22, r28
 1e6:	6f 5c       	subi	r22, 0xCF	; 207
 1e8:	7f 4f       	sbci	r23, 0xFF	; 255
 1ea:	82 ef       	ldi	r24, 0xF2	; 242
 1ec:	92 e0       	ldi	r25, 0x02	; 2
 1ee:	0e 94 7e 04 	call	0x8fc	; 0x8fc <strcpy>
 1f2:	2b c0       	rjmp	.+86     	; 0x24a <CheckPlayers+0x188>
 1f4:	9f 5f       	subi	r25, 0xFF	; 255
 1f6:	96 30       	cpi	r25, 0x06	; 6
 1f8:	10 f3       	brcs	.-60     	; 0x1be <CheckPlayers+0xfc>
 1fa:	27 c0       	rjmp	.+78     	; 0x24a <CheckPlayers+0x188>
 1fc:	21 11       	cpse	r18, r1
 1fe:	08 c0       	rjmp	.+16     	; 0x210 <CheckPlayers+0x14e>
 200:	be 01       	movw	r22, r28
 202:	6f 5f       	subi	r22, 0xFF	; 255
 204:	7f 4f       	sbci	r23, 0xFF	; 255
 206:	82 ef       	ldi	r24, 0xF2	; 242
 208:	92 e0       	ldi	r25, 0x02	; 2
 20a:	0e 94 7e 04 	call	0x8fc	; 0x8fc <strcpy>
 20e:	07 c0       	rjmp	.+14     	; 0x21e <CheckPlayers+0x15c>
 210:	be 01       	movw	r22, r28
 212:	6f 5e       	subi	r22, 0xEF	; 239
 214:	7f 4f       	sbci	r23, 0xFF	; 255
 216:	82 ef       	ldi	r24, 0xF2	; 242
 218:	92 e0       	ldi	r25, 0x02	; 2
 21a:	0e 94 7e 04 	call	0x8fc	; 0x8fc <strcpy>
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <__data_end>
 224:	12 c0       	rjmp	.+36     	; 0x24a <CheckPlayers+0x188>
 226:	22 23       	and	r18, r18
 228:	59 f0       	breq	.+22     	; 0x240 <CheckPlayers+0x17e>
 22a:	be 01       	movw	r22, r28
 22c:	6f 5d       	subi	r22, 0xDF	; 223
 22e:	7f 4f       	sbci	r23, 0xFF	; 255
 230:	82 ef       	ldi	r24, 0xF2	; 242
 232:	92 e0       	ldi	r25, 0x02	; 2
 234:	0e 94 7e 04 	call	0x8fc	; 0x8fc <strcpy>
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <__data_end>
 23e:	05 c0       	rjmp	.+10     	; 0x24a <CheckPlayers+0x188>
 240:	10 92 ee 02 	sts	0x02EE, r1	; 0x8002ee <__data_end>
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 24a:	c0 5b       	subi	r28, 0xB0	; 176
 24c:	df 4f       	sbci	r29, 0xFF	; 255
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	f8 94       	cli
 252:	de bf       	out	0x3e, r29	; 62
 254:	0f be       	out	0x3f, r0	; 63
 256:	cd bf       	out	0x3d, r28	; 61
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	08 95       	ret

0000025e <BeMode>:
 25e:	9b b3       	in	r25, 0x1b	; 27
 260:	28 2f       	mov	r18, r24
 262:	26 95       	lsr	r18
 264:	28 77       	andi	r18, 0x78	; 120
 266:	97 78       	andi	r25, 0x87	; 135
 268:	92 2b       	or	r25, r18
 26a:	9b bb       	out	0x1b, r25	; 27
 26c:	9b b3       	in	r25, 0x1b	; 27
 26e:	9d 7f       	andi	r25, 0xFD	; 253
 270:	9b bb       	out	0x1b, r25	; 27
 272:	9b b3       	in	r25, 0x1b	; 27
 274:	94 60       	ori	r25, 0x04	; 4
 276:	9b bb       	out	0x1b, r25	; 27
 278:	2a e6       	ldi	r18, 0x6A	; 106
 27a:	2a 95       	dec	r18
 27c:	f1 f7       	brne	.-4      	; 0x27a <BeMode+0x1c>
 27e:	00 c0       	rjmp	.+0      	; 0x280 <BeMode+0x22>
 280:	9b b3       	in	r25, 0x1b	; 27
 282:	9b 7f       	andi	r25, 0xFB	; 251
 284:	9b bb       	out	0x1b, r25	; 27
 286:	9a e6       	ldi	r25, 0x6A	; 106
 288:	9a 95       	dec	r25
 28a:	f1 f7       	brne	.-4      	; 0x288 <BeMode+0x2a>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <BeMode+0x30>
 28e:	2b b3       	in	r18, 0x1b	; 27
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	88 0f       	add	r24, r24
 294:	99 1f       	adc	r25, r25
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	88 0f       	add	r24, r24
 29c:	99 1f       	adc	r25, r25
 29e:	92 2f       	mov	r25, r18
 2a0:	97 78       	andi	r25, 0x87	; 135
 2a2:	88 77       	andi	r24, 0x78	; 120
 2a4:	89 2b       	or	r24, r25
 2a6:	8b bb       	out	0x1b, r24	; 27
 2a8:	8b b3       	in	r24, 0x1b	; 27
 2aa:	84 60       	ori	r24, 0x04	; 4
 2ac:	8b bb       	out	0x1b, r24	; 27
 2ae:	2a e6       	ldi	r18, 0x6A	; 106
 2b0:	2a 95       	dec	r18
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <BeMode+0x52>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <BeMode+0x58>
 2b6:	8b b3       	in	r24, 0x1b	; 27
 2b8:	8b 7f       	andi	r24, 0xFB	; 251
 2ba:	8b bb       	out	0x1b, r24	; 27
 2bc:	8f ef       	ldi	r24, 0xFF	; 255
 2be:	99 ef       	ldi	r25, 0xF9	; 249
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	81 50       	subi	r24, 0x01	; 1
 2c4:	90 40       	sbci	r25, 0x00	; 0
 2c6:	20 40       	sbci	r18, 0x00	; 0
 2c8:	e1 f7       	brne	.-8      	; 0x2c2 <BeMode+0x64>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <BeMode+0x6e>
 2cc:	00 00       	nop
 2ce:	08 95       	ret

000002d0 <setB>:
 2d0:	48 b3       	in	r20, 0x18	; 24
 2d2:	28 2f       	mov	r18, r24
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	2a 5f       	subi	r18, 0xFA	; 250
 2d8:	3f 4f       	sbci	r19, 0xFF	; 255
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <setB+0x14>
 2e0:	88 0f       	add	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	2a 95       	dec	r18
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <setB+0x10>
 2e8:	24 2f       	mov	r18, r20
 2ea:	28 2b       	or	r18, r24
 2ec:	28 bb       	out	0x18, r18	; 24
 2ee:	66 23       	and	r22, r22
 2f0:	39 f0       	breq	.+14     	; 0x300 <setB+0x30>
 2f2:	ef e9       	ldi	r30, 0x9F	; 159
 2f4:	ff e0       	ldi	r31, 0x0F	; 15
 2f6:	31 97       	sbiw	r30, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <setB+0x26>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <setB+0x2c>
 2fc:	00 00       	nop
 2fe:	06 c0       	rjmp	.+12     	; 0x30c <setB+0x3c>
 300:	ef e3       	ldi	r30, 0x3F	; 63
 302:	ff e1       	ldi	r31, 0x1F	; 31
 304:	31 97       	sbiw	r30, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <setB+0x34>
 308:	00 c0       	rjmp	.+0      	; 0x30a <setB+0x3a>
 30a:	00 00       	nop
 30c:	98 b3       	in	r25, 0x18	; 24
 30e:	80 95       	com	r24
 310:	89 23       	and	r24, r25
 312:	88 bb       	out	0x18, r24	; 24
 314:	66 23       	and	r22, r22
 316:	51 f0       	breq	.+20     	; 0x32c <setB+0x5c>
 318:	ff e7       	ldi	r31, 0x7F	; 127
 31a:	2d ee       	ldi	r18, 0xED	; 237
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	f1 50       	subi	r31, 0x01	; 1
 320:	20 40       	sbci	r18, 0x00	; 0
 322:	80 40       	sbci	r24, 0x00	; 0
 324:	e1 f7       	brne	.-8      	; 0x31e <setB+0x4e>
 326:	00 c0       	rjmp	.+0      	; 0x328 <setB+0x58>
 328:	00 00       	nop
 32a:	08 95       	ret
 32c:	9f ef       	ldi	r25, 0xFF	; 255
 32e:	e0 ee       	ldi	r30, 0xE0	; 224
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	91 50       	subi	r25, 0x01	; 1
 334:	e0 40       	sbci	r30, 0x00	; 0
 336:	f0 40       	sbci	r31, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <setB+0x62>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <setB+0x6c>
 33c:	00 00       	nop
 33e:	08 95       	ret

00000340 <setD>:
 340:	84 30       	cpi	r24, 0x04	; 4
 342:	10 f4       	brcc	.+4      	; 0x348 <setD+0x8>
 344:	2e ef       	ldi	r18, 0xFE	; 254
 346:	01 c0       	rjmp	.+2      	; 0x34a <setD+0xa>
 348:	22 e0       	ldi	r18, 0x02	; 2
 34a:	28 0f       	add	r18, r24
 34c:	32 b3       	in	r19, 0x12	; 18
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	02 c0       	rjmp	.+4      	; 0x358 <setD+0x18>
 354:	88 0f       	add	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	2a 95       	dec	r18
 35a:	e2 f7       	brpl	.-8      	; 0x354 <setD+0x14>
 35c:	23 2f       	mov	r18, r19
 35e:	28 2b       	or	r18, r24
 360:	22 bb       	out	0x12, r18	; 18
 362:	66 23       	and	r22, r22
 364:	39 f0       	breq	.+14     	; 0x374 <setD+0x34>
 366:	ef e9       	ldi	r30, 0x9F	; 159
 368:	ff e0       	ldi	r31, 0x0F	; 15
 36a:	31 97       	sbiw	r30, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <setD+0x2a>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <setD+0x30>
 370:	00 00       	nop
 372:	06 c0       	rjmp	.+12     	; 0x380 <setD+0x40>
 374:	ef e3       	ldi	r30, 0x3F	; 63
 376:	ff e1       	ldi	r31, 0x1F	; 31
 378:	31 97       	sbiw	r30, 0x01	; 1
 37a:	f1 f7       	brne	.-4      	; 0x378 <setD+0x38>
 37c:	00 c0       	rjmp	.+0      	; 0x37e <setD+0x3e>
 37e:	00 00       	nop
 380:	92 b3       	in	r25, 0x12	; 18
 382:	80 95       	com	r24
 384:	89 23       	and	r24, r25
 386:	82 bb       	out	0x12, r24	; 18
 388:	66 23       	and	r22, r22
 38a:	51 f0       	breq	.+20     	; 0x3a0 <setD+0x60>
 38c:	ff e7       	ldi	r31, 0x7F	; 127
 38e:	2d ee       	ldi	r18, 0xED	; 237
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	f1 50       	subi	r31, 0x01	; 1
 394:	20 40       	sbci	r18, 0x00	; 0
 396:	80 40       	sbci	r24, 0x00	; 0
 398:	e1 f7       	brne	.-8      	; 0x392 <setD+0x52>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <setD+0x5c>
 39c:	00 00       	nop
 39e:	08 95       	ret
 3a0:	9f ef       	ldi	r25, 0xFF	; 255
 3a2:	e0 ee       	ldi	r30, 0xE0	; 224
 3a4:	f0 e0       	ldi	r31, 0x00	; 0
 3a6:	91 50       	subi	r25, 0x01	; 1
 3a8:	e0 40       	sbci	r30, 0x00	; 0
 3aa:	f0 40       	sbci	r31, 0x00	; 0
 3ac:	e1 f7       	brne	.-8      	; 0x3a6 <setD+0x66>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <setD+0x70>
 3b0:	00 00       	nop
 3b2:	08 95       	ret

000003b4 <open>:
 3b4:	cf 93       	push	r28
 3b6:	82 30       	cpi	r24, 0x02	; 2
 3b8:	48 f4       	brcc	.+18     	; 0x3cc <open+0x18>
 3ba:	91 e0       	ldi	r25, 0x01	; 1
 3bc:	81 11       	cpse	r24, r1
 3be:	01 c0       	rjmp	.+2      	; 0x3c2 <open+0xe>
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	61 e0       	ldi	r22, 0x01	; 1
 3c4:	89 2f       	mov	r24, r25
 3c6:	0e 94 68 01 	call	0x2d0	; 0x2d0 <setB>
 3ca:	17 c0       	rjmp	.+46     	; 0x3fa <open+0x46>
 3cc:	86 30       	cpi	r24, 0x06	; 6
 3ce:	20 f4       	brcc	.+8      	; 0x3d8 <open+0x24>
 3d0:	61 e0       	ldi	r22, 0x01	; 1
 3d2:	0e 94 a0 01 	call	0x340	; 0x340 <setD>
 3d6:	11 c0       	rjmp	.+34     	; 0x3fa <open+0x46>
 3d8:	60 e0       	ldi	r22, 0x00	; 0
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	0e 94 68 01 	call	0x2d0	; 0x2d0 <setB>
 3e0:	60 e0       	ldi	r22, 0x00	; 0
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	0e 94 68 01 	call	0x2d0	; 0x2d0 <setB>
 3e8:	c2 e0       	ldi	r28, 0x02	; 2
 3ea:	05 c0       	rjmp	.+10     	; 0x3f6 <open+0x42>
 3ec:	60 e0       	ldi	r22, 0x00	; 0
 3ee:	8c 2f       	mov	r24, r28
 3f0:	0e 94 a0 01 	call	0x340	; 0x340 <setD>
 3f4:	cf 5f       	subi	r28, 0xFF	; 255
 3f6:	c6 30       	cpi	r28, 0x06	; 6
 3f8:	c8 f3       	brcs	.-14     	; 0x3ec <open+0x38>
 3fa:	84 e1       	ldi	r24, 0x14	; 20
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	0e 94 49 00 	call	0x92	; 0x92 <Timer1_Init>
 402:	cf 91       	pop	r28
 404:	08 95       	ret

00000406 <BeM>:
 406:	ac 01       	movw	r20, r24
 408:	60 e0       	ldi	r22, 0x00	; 0
 40a:	33 c0       	rjmp	.+102    	; 0x472 <BeM+0x6c>
 40c:	2b b3       	in	r18, 0x1b	; 27
 40e:	96 95       	lsr	r25
 410:	98 77       	andi	r25, 0x78	; 120
 412:	27 78       	andi	r18, 0x87	; 135
 414:	92 2b       	or	r25, r18
 416:	9b bb       	out	0x1b, r25	; 27
 418:	8b b3       	in	r24, 0x1b	; 27
 41a:	82 60       	ori	r24, 0x02	; 2
 41c:	8b bb       	out	0x1b, r24	; 27
 41e:	8b b3       	in	r24, 0x1b	; 27
 420:	84 60       	ori	r24, 0x04	; 4
 422:	8b bb       	out	0x1b, r24	; 27
 424:	80 e5       	ldi	r24, 0x50	; 80
 426:	8a 95       	dec	r24
 428:	f1 f7       	brne	.-4      	; 0x426 <BeM+0x20>
 42a:	8b b3       	in	r24, 0x1b	; 27
 42c:	8b 7f       	andi	r24, 0xFB	; 251
 42e:	8b bb       	out	0x1b, r24	; 27
 430:	90 e5       	ldi	r25, 0x50	; 80
 432:	9a 95       	dec	r25
 434:	f1 f7       	brne	.-4      	; 0x432 <BeM+0x2c>
 436:	8b b3       	in	r24, 0x1b	; 27
 438:	90 81       	ld	r25, Z
 43a:	29 2f       	mov	r18, r25
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	22 0f       	add	r18, r18
 440:	33 1f       	adc	r19, r19
 442:	22 0f       	add	r18, r18
 444:	33 1f       	adc	r19, r19
 446:	22 0f       	add	r18, r18
 448:	33 1f       	adc	r19, r19
 44a:	87 78       	andi	r24, 0x87	; 135
 44c:	28 77       	andi	r18, 0x78	; 120
 44e:	28 2b       	or	r18, r24
 450:	2b bb       	out	0x1b, r18	; 27
 452:	8b b3       	in	r24, 0x1b	; 27
 454:	84 60       	ori	r24, 0x04	; 4
 456:	8b bb       	out	0x1b, r24	; 27
 458:	80 e5       	ldi	r24, 0x50	; 80
 45a:	8a 95       	dec	r24
 45c:	f1 f7       	brne	.-4      	; 0x45a <BeM+0x54>
 45e:	9b b3       	in	r25, 0x1b	; 27
 460:	9b 7f       	andi	r25, 0xFB	; 251
 462:	9b bb       	out	0x1b, r25	; 27
 464:	8f e5       	ldi	r24, 0x5F	; 95
 466:	9a ee       	ldi	r25, 0xEA	; 234
 468:	01 97       	sbiw	r24, 0x01	; 1
 46a:	f1 f7       	brne	.-4      	; 0x468 <BeM+0x62>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <BeM+0x68>
 46e:	00 00       	nop
 470:	6f 5f       	subi	r22, 0xFF	; 255
 472:	fa 01       	movw	r30, r20
 474:	e6 0f       	add	r30, r22
 476:	f1 1d       	adc	r31, r1
 478:	90 81       	ld	r25, Z
 47a:	91 11       	cpse	r25, r1
 47c:	c7 cf       	rjmp	.-114    	; 0x40c <BeM+0x6>
 47e:	08 95       	ret

00000480 <LCD_Init>:
 480:	2f ef       	ldi	r18, 0xFF	; 255
 482:	89 ef       	ldi	r24, 0xF9	; 249
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	21 50       	subi	r18, 0x01	; 1
 488:	80 40       	sbci	r24, 0x00	; 0
 48a:	90 40       	sbci	r25, 0x00	; 0
 48c:	e1 f7       	brne	.-8      	; 0x486 <LCD_Init+0x6>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <LCD_Init+0x10>
 490:	00 00       	nop
 492:	82 e0       	ldi	r24, 0x02	; 2
 494:	0e 94 2f 01 	call	0x25e	; 0x25e <BeMode>
 498:	88 e2       	ldi	r24, 0x28	; 40
 49a:	0e 94 2f 01 	call	0x25e	; 0x25e <BeMode>
 49e:	8c e0       	ldi	r24, 0x0C	; 12
 4a0:	0e 94 2f 01 	call	0x25e	; 0x25e <BeMode>
 4a4:	86 e0       	ldi	r24, 0x06	; 6
 4a6:	0e 94 2f 01 	call	0x25e	; 0x25e <BeMode>
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	0e 94 2f 01 	call	0x25e	; 0x25e <BeMode>
 4b0:	2f ef       	ldi	r18, 0xFF	; 255
 4b2:	89 ef       	ldi	r24, 0xF9	; 249
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	21 50       	subi	r18, 0x01	; 1
 4b8:	80 40       	sbci	r24, 0x00	; 0
 4ba:	90 40       	sbci	r25, 0x00	; 0
 4bc:	e1 f7       	brne	.-8      	; 0x4b6 <LCD_Init+0x36>
 4be:	00 c0       	rjmp	.+0      	; 0x4c0 <LCD_Init+0x40>
 4c0:	00 00       	nop
 4c2:	08 95       	ret

000004c4 <BeMessage>:
 4c4:	0f 93       	push	r16
 4c6:	1f 93       	push	r17
 4c8:	cf 93       	push	r28
 4ca:	df 93       	push	r29
 4cc:	8c 01       	movw	r16, r24
 4ce:	c0 e0       	ldi	r28, 0x00	; 0
 4d0:	d0 e0       	ldi	r29, 0x00	; 0
 4d2:	11 c0       	rjmp	.+34     	; 0x4f6 <BeMessage+0x32>
 4d4:	80 91 ef 02 	lds	r24, 0x02EF	; 0x8002ef <PrintT>
 4d8:	88 23       	and	r24, r24
 4da:	61 f0       	breq	.+24     	; 0x4f4 <BeMessage+0x30>
 4dc:	81 eb       	ldi	r24, 0xB1	; 177
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 4e4:	8f e5       	ldi	r24, 0x5F	; 95
 4e6:	9a ee       	ldi	r25, 0xEA	; 234
 4e8:	01 97       	sbiw	r24, 0x01	; 1
 4ea:	f1 f7       	brne	.-4      	; 0x4e8 <BeMessage+0x24>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <BeMessage+0x2a>
 4ee:	00 00       	nop
 4f0:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
 4f4:	21 96       	adiw	r28, 0x01	; 1
 4f6:	c5 30       	cpi	r28, 0x05	; 5
 4f8:	d1 05       	cpc	r29, r1
 4fa:	64 f3       	brlt	.-40     	; 0x4d4 <BeMessage+0x10>
 4fc:	0c c0       	rjmp	.+24     	; 0x516 <BeMessage+0x52>
 4fe:	82 ef       	ldi	r24, 0xF2	; 242
 500:	92 e0       	ldi	r25, 0x02	; 2
 502:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 506:	8f e5       	ldi	r24, 0x5F	; 95
 508:	9a ee       	ldi	r25, 0xEA	; 234
 50a:	01 97       	sbiw	r24, 0x01	; 1
 50c:	f1 f7       	brne	.-4      	; 0x50a <BeMessage+0x46>
 50e:	00 c0       	rjmp	.+0      	; 0x510 <BeMessage+0x4c>
 510:	00 00       	nop
 512:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
 516:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <__data_end>
 51a:	81 11       	cpse	r24, r1
 51c:	f0 cf       	rjmp	.-32     	; 0x4fe <BeMessage+0x3a>
 51e:	c8 01       	movw	r24, r16
 520:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	1f 91       	pop	r17
 52a:	0f 91       	pop	r16
 52c:	08 95       	ret

0000052e <ADC_init>:
	for(int i=0;i<5;i++) if (PrintT) BeM("TEMP ALERT!!"),_delay_ms(15),LCD_Init(); //alert if any fault occurred
	while (PrintP) BeM(PlayAlert),_delay_ms(15),LCD_Init();
	BeM(str);
}
void ADC_init(){
	ADMUX|=1<<REFS0;
 52e:	87 b1       	in	r24, 0x07	; 7
 530:	80 64       	ori	r24, 0x40	; 64
 532:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=(1<<ADEN)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
 534:	86 b1       	in	r24, 0x06	; 6
 536:	87 68       	ori	r24, 0x87	; 135
 538:	86 b9       	out	0x06, r24	; 6
 53a:	08 95       	ret

0000053c <ADC_Read>:
}
uint16_t ADC_Read(uint8_t pin){
	ADMUX = (ADMUX&0xF8)|(pin&0x07);
 53c:	97 b1       	in	r25, 0x07	; 7
 53e:	98 7f       	andi	r25, 0xF8	; 248
 540:	87 70       	andi	r24, 0x07	; 7
 542:	89 2b       	or	r24, r25
 544:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=1<<ADSC;
 546:	86 b1       	in	r24, 0x06	; 6
 548:	80 64       	ori	r24, 0x40	; 64
 54a:	86 b9       	out	0x06, r24	; 6
	while(ADCSRA&(1<<ADIF));
 54c:	34 99       	sbic	0x06, 4	; 6
 54e:	fe cf       	rjmp	.-4      	; 0x54c <ADC_Read+0x10>
	return ADC;
 550:	84 b1       	in	r24, 0x04	; 4
 552:	95 b1       	in	r25, 0x05	; 5
 554:	08 95       	ret

00000556 <CheckSensors>:
			_delay_ms(100);
		}
		CheckForPlayer=0; //check for empty maze
	}
}
void CheckSensors(){
 556:	4f 92       	push	r4
 558:	5f 92       	push	r5
 55a:	6f 92       	push	r6
 55c:	7f 92       	push	r7
 55e:	8f 92       	push	r8
 560:	9f 92       	push	r9
 562:	af 92       	push	r10
 564:	bf 92       	push	r11
 566:	cf 92       	push	r12
 568:	df 92       	push	r13
 56a:	ef 92       	push	r14
 56c:	ff 92       	push	r15
 56e:	0f 93       	push	r16
 570:	1f 93       	push	r17
 572:	cf 93       	push	r28
 574:	df 93       	push	r29
 576:	cd b7       	in	r28, 0x3d	; 61
 578:	de b7       	in	r29, 0x3e	; 62
 57a:	c0 56       	subi	r28, 0x60	; 96
 57c:	d1 09       	sbc	r29, r1
 57e:	0f b6       	in	r0, 0x3f	; 63
 580:	f8 94       	cli
 582:	de bf       	out	0x3e, r29	; 62
 584:	0f be       	out	0x3f, r0	; 63
 586:	cd bf       	out	0x3d, r28	; 61
	uint16_t FSR_Voltage = ADC_Read(7);
 588:	87 e0       	ldi	r24, 0x07	; 7
 58a:	0e 94 9e 02 	call	0x53c	; 0x53c <ADC_Read>
	SensorsReadings[0]= (FSR_Voltage>705) ? 2 : (FSR_Voltage>630);
 58e:	21 e0       	ldi	r18, 0x01	; 1
 590:	87 37       	cpi	r24, 0x77	; 119
 592:	92 40       	sbci	r25, 0x02	; 2
 594:	08 f4       	brcc	.+2      	; 0x598 <CheckSensors+0x42>
 596:	20 e0       	ldi	r18, 0x00	; 0
 598:	20 93 02 03 	sts	0x0302, r18	; 0x800302 <SensorsReadings>
	for(int i=0;i<5;i++)
 59c:	20 e0       	ldi	r18, 0x00	; 0
 59e:	30 e0       	ldi	r19, 0x00	; 0
 5a0:	19 c0       	rjmp	.+50     	; 0x5d4 <CheckSensors+0x7e>
	SensorsReadings[i+1]= (PINB&(1<<i));
 5a2:	b9 01       	movw	r22, r18
 5a4:	6f 5f       	subi	r22, 0xFF	; 255
 5a6:	7f 4f       	sbci	r23, 0xFF	; 255
 5a8:	46 b3       	in	r20, 0x16	; 22
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	fc 01       	movw	r30, r24
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <CheckSensors+0x60>
 5b2:	ee 0f       	add	r30, r30
 5b4:	ff 1f       	adc	r31, r31
 5b6:	2a 95       	dec	r18
 5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <CheckSensors+0x5c>
 5ba:	84 2f       	mov	r24, r20
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	8e 23       	and	r24, r30
 5c0:	9f 23       	and	r25, r31
 5c2:	21 e0       	ldi	r18, 0x01	; 1
 5c4:	89 2b       	or	r24, r25
 5c6:	09 f4       	brne	.+2      	; 0x5ca <CheckSensors+0x74>
 5c8:	20 e0       	ldi	r18, 0x00	; 0
 5ca:	fb 01       	movw	r30, r22
 5cc:	ee 5f       	subi	r30, 0xFE	; 254
 5ce:	fc 4f       	sbci	r31, 0xFC	; 252
 5d0:	20 83       	st	Z, r18
	}
}
void CheckSensors(){
	uint16_t FSR_Voltage = ADC_Read(7);
	SensorsReadings[0]= (FSR_Voltage>705) ? 2 : (FSR_Voltage>630);
	for(int i=0;i<5;i++)
 5d2:	9b 01       	movw	r18, r22
 5d4:	25 30       	cpi	r18, 0x05	; 5
 5d6:	31 05       	cpc	r19, r1
 5d8:	24 f3       	brlt	.-56     	; 0x5a2 <CheckSensors+0x4c>
	SensorsReadings[i+1]= (PINB&(1<<i));
	char a[16],b[16],c[16],d[16],e[16],f[16];
	sprintf(a,"%d",SensorsReadings[0]);
 5da:	0f 2e       	mov	r0, r31
 5dc:	f2 e0       	ldi	r31, 0x02	; 2
 5de:	ef 2e       	mov	r14, r31
 5e0:	f3 e0       	ldi	r31, 0x03	; 3
 5e2:	ff 2e       	mov	r15, r31
 5e4:	f0 2d       	mov	r31, r0
 5e6:	f7 01       	movw	r30, r14
 5e8:	80 81       	ld	r24, Z
 5ea:	1f 92       	push	r1
 5ec:	8f 93       	push	r24
 5ee:	0e eb       	ldi	r16, 0xBE	; 190
 5f0:	10 e0       	ldi	r17, 0x00	; 0
 5f2:	1f 93       	push	r17
 5f4:	0f 93       	push	r16
 5f6:	9e 01       	movw	r18, r28
 5f8:	2f 5f       	subi	r18, 0xFF	; 255
 5fa:	3f 4f       	sbci	r19, 0xFF	; 255
 5fc:	49 01       	movw	r8, r18
 5fe:	3f 93       	push	r19
 600:	2f 93       	push	r18
 602:	0e 94 85 04 	call	0x90a	; 0x90a <sprintf>
	sprintf(b,"%d",SensorsReadings[1]);
 606:	f7 01       	movw	r30, r14
 608:	81 81       	ldd	r24, Z+1	; 0x01
 60a:	1f 92       	push	r1
 60c:	8f 93       	push	r24
 60e:	1f 93       	push	r17
 610:	0f 93       	push	r16
 612:	5e 01       	movw	r10, r28
 614:	f1 e1       	ldi	r31, 0x11	; 17
 616:	af 0e       	add	r10, r31
 618:	b1 1c       	adc	r11, r1
 61a:	bf 92       	push	r11
 61c:	af 92       	push	r10
 61e:	0e 94 85 04 	call	0x90a	; 0x90a <sprintf>
	sprintf(c,"%d",SensorsReadings[2]);
 622:	f7 01       	movw	r30, r14
 624:	82 81       	ldd	r24, Z+2	; 0x02
 626:	1f 92       	push	r1
 628:	8f 93       	push	r24
 62a:	1f 93       	push	r17
 62c:	0f 93       	push	r16
 62e:	6e 01       	movw	r12, r28
 630:	f1 e2       	ldi	r31, 0x21	; 33
 632:	cf 0e       	add	r12, r31
 634:	d1 1c       	adc	r13, r1
 636:	df 92       	push	r13
 638:	cf 92       	push	r12
 63a:	0e 94 85 04 	call	0x90a	; 0x90a <sprintf>
	sprintf(d,"%d",SensorsReadings[3]);
 63e:	f7 01       	movw	r30, r14
 640:	83 81       	ldd	r24, Z+3	; 0x03
 642:	1f 92       	push	r1
 644:	8f 93       	push	r24
 646:	1f 93       	push	r17
 648:	0f 93       	push	r16
 64a:	3e 01       	movw	r6, r28
 64c:	f1 e3       	ldi	r31, 0x31	; 49
 64e:	6f 0e       	add	r6, r31
 650:	71 1c       	adc	r7, r1
 652:	7f 92       	push	r7
 654:	6f 92       	push	r6
 656:	0e 94 85 04 	call	0x90a	; 0x90a <sprintf>
	sprintf(e,"%d",SensorsReadings[4]);
 65a:	f7 01       	movw	r30, r14
 65c:	84 81       	ldd	r24, Z+4	; 0x04
 65e:	1f 92       	push	r1
 660:	8f 93       	push	r24
 662:	1f 93       	push	r17
 664:	0f 93       	push	r16
 666:	2e 01       	movw	r4, r28
 668:	f1 e4       	ldi	r31, 0x41	; 65
 66a:	4f 0e       	add	r4, r31
 66c:	51 1c       	adc	r5, r1
 66e:	5f 92       	push	r5
 670:	4f 92       	push	r4
 672:	0e 94 85 04 	call	0x90a	; 0x90a <sprintf>
	sprintf(f,"%d",SensorsReadings[5]);
 676:	f7 01       	movw	r30, r14
 678:	85 81       	ldd	r24, Z+5	; 0x05
 67a:	1f 92       	push	r1
 67c:	8f 93       	push	r24
 67e:	1f 93       	push	r17
 680:	0f 93       	push	r16
 682:	8e 01       	movw	r16, r28
 684:	0f 5a       	subi	r16, 0xAF	; 175
 686:	1f 4f       	sbci	r17, 0xFF	; 255
 688:	1f 93       	push	r17
 68a:	0f 93       	push	r16
 68c:	0e 94 85 04 	call	0x90a	; 0x90a <sprintf>
	LCD_Init();
 690:	0f b6       	in	r0, 0x3f	; 63
 692:	f8 94       	cli
 694:	de bf       	out	0x3e, r29	; 62
 696:	0f be       	out	0x3f, r0	; 63
 698:	cd bf       	out	0x3d, r28	; 61
 69a:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
	BeMessage("a: "),BeM(a),_delay_ms(1000);
 69e:	89 ed       	ldi	r24, 0xD9	; 217
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 94 62 02 	call	0x4c4	; 0x4c4 <BeMessage>
 6a6:	c4 01       	movw	r24, r8
 6a8:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6ac:	3f ef       	ldi	r19, 0xFF	; 255
 6ae:	83 ed       	ldi	r24, 0xD3	; 211
 6b0:	90 e3       	ldi	r25, 0x30	; 48
 6b2:	31 50       	subi	r19, 0x01	; 1
 6b4:	80 40       	sbci	r24, 0x00	; 0
 6b6:	90 40       	sbci	r25, 0x00	; 0
 6b8:	e1 f7       	brne	.-8      	; 0x6b2 <CheckSensors+0x15c>
 6ba:	00 c0       	rjmp	.+0      	; 0x6bc <CheckSensors+0x166>
 6bc:	00 00       	nop
	LCD_Init();
 6be:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
	BeMessage("b: "),BeM(b),_delay_ms(100);
 6c2:	8d ed       	ldi	r24, 0xDD	; 221
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	0e 94 62 02 	call	0x4c4	; 0x4c4 <BeMessage>
 6ca:	c5 01       	movw	r24, r10
 6cc:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 6d0:	ef ef       	ldi	r30, 0xFF	; 255
 6d2:	f1 ee       	ldi	r31, 0xE1	; 225
 6d4:	24 e0       	ldi	r18, 0x04	; 4
 6d6:	e1 50       	subi	r30, 0x01	; 1
 6d8:	f0 40       	sbci	r31, 0x00	; 0
 6da:	20 40       	sbci	r18, 0x00	; 0
 6dc:	e1 f7       	brne	.-8      	; 0x6d6 <CheckSensors+0x180>
 6de:	00 c0       	rjmp	.+0      	; 0x6e0 <CheckSensors+0x18a>
 6e0:	00 00       	nop
	LCD_Init();
 6e2:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
	BeMessage("c: "),BeM(c),_delay_ms(100);
 6e6:	81 ee       	ldi	r24, 0xE1	; 225
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	0e 94 62 02 	call	0x4c4	; 0x4c4 <BeMessage>
 6ee:	c6 01       	movw	r24, r12
 6f0:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 6f4:	3f ef       	ldi	r19, 0xFF	; 255
 6f6:	81 ee       	ldi	r24, 0xE1	; 225
 6f8:	94 e0       	ldi	r25, 0x04	; 4
 6fa:	31 50       	subi	r19, 0x01	; 1
 6fc:	80 40       	sbci	r24, 0x00	; 0
 6fe:	90 40       	sbci	r25, 0x00	; 0
 700:	e1 f7       	brne	.-8      	; 0x6fa <CheckSensors+0x1a4>
 702:	00 c0       	rjmp	.+0      	; 0x704 <CheckSensors+0x1ae>
 704:	00 00       	nop
	LCD_Init();
 706:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
	BeMessage("d: "),BeM(d),_delay_ms(100);
 70a:	85 ee       	ldi	r24, 0xE5	; 229
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 62 02 	call	0x4c4	; 0x4c4 <BeMessage>
 712:	c3 01       	movw	r24, r6
 714:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 718:	ef ef       	ldi	r30, 0xFF	; 255
 71a:	f1 ee       	ldi	r31, 0xE1	; 225
 71c:	24 e0       	ldi	r18, 0x04	; 4
 71e:	e1 50       	subi	r30, 0x01	; 1
 720:	f0 40       	sbci	r31, 0x00	; 0
 722:	20 40       	sbci	r18, 0x00	; 0
 724:	e1 f7       	brne	.-8      	; 0x71e <CheckSensors+0x1c8>
 726:	00 c0       	rjmp	.+0      	; 0x728 <CheckSensors+0x1d2>
 728:	00 00       	nop
	LCD_Init();
 72a:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
	BeMessage("e: "),BeM(e),_delay_ms(100);
 72e:	89 ee       	ldi	r24, 0xE9	; 233
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	0e 94 62 02 	call	0x4c4	; 0x4c4 <BeMessage>
 736:	c2 01       	movw	r24, r4
 738:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 73c:	3f ef       	ldi	r19, 0xFF	; 255
 73e:	81 ee       	ldi	r24, 0xE1	; 225
 740:	94 e0       	ldi	r25, 0x04	; 4
 742:	31 50       	subi	r19, 0x01	; 1
 744:	80 40       	sbci	r24, 0x00	; 0
 746:	90 40       	sbci	r25, 0x00	; 0
 748:	e1 f7       	brne	.-8      	; 0x742 <CheckSensors+0x1ec>
 74a:	00 c0       	rjmp	.+0      	; 0x74c <CheckSensors+0x1f6>
 74c:	00 00       	nop
	LCD_Init();
 74e:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
	BeMessage("f: "),BeM(f),_delay_ms(100);
 752:	8d ee       	ldi	r24, 0xED	; 237
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	0e 94 62 02 	call	0x4c4	; 0x4c4 <BeMessage>
 75a:	c8 01       	movw	r24, r16
 75c:	0e 94 03 02 	call	0x406	; 0x406 <BeM>
 760:	ef ef       	ldi	r30, 0xFF	; 255
 762:	f1 ee       	ldi	r31, 0xE1	; 225
 764:	24 e0       	ldi	r18, 0x04	; 4
 766:	e1 50       	subi	r30, 0x01	; 1
 768:	f0 40       	sbci	r31, 0x00	; 0
 76a:	20 40       	sbci	r18, 0x00	; 0
 76c:	e1 f7       	brne	.-8      	; 0x766 <CheckSensors+0x210>
 76e:	00 c0       	rjmp	.+0      	; 0x770 <CheckSensors+0x21a>
 770:	00 00       	nop
}
 772:	c0 5a       	subi	r28, 0xA0	; 160
 774:	df 4f       	sbci	r29, 0xFF	; 255
 776:	0f b6       	in	r0, 0x3f	; 63
 778:	f8 94       	cli
 77a:	de bf       	out	0x3e, r29	; 62
 77c:	0f be       	out	0x3f, r0	; 63
 77e:	cd bf       	out	0x3d, r28	; 61
 780:	df 91       	pop	r29
 782:	cf 91       	pop	r28
 784:	1f 91       	pop	r17
 786:	0f 91       	pop	r16
 788:	ff 90       	pop	r15
 78a:	ef 90       	pop	r14
 78c:	df 90       	pop	r13
 78e:	cf 90       	pop	r12
 790:	bf 90       	pop	r11
 792:	af 90       	pop	r10
 794:	9f 90       	pop	r9
 796:	8f 90       	pop	r8
 798:	7f 90       	pop	r7
 79a:	6f 90       	pop	r6
 79c:	5f 90       	pop	r5
 79e:	4f 90       	pop	r4
 7a0:	08 95       	ret

000007a2 <__vector_7>:
void BeMode(uint8_t cmd);
void BeMessage(char* str);
void BeM(char* str);
void CheckTemperature();
void CheckPlayers();
ISR(TIMER1_COMPA_vect) {
 7a2:	1f 92       	push	r1
 7a4:	0f 92       	push	r0
 7a6:	0f b6       	in	r0, 0x3f	; 63
 7a8:	0f 92       	push	r0
 7aa:	11 24       	eor	r1, r1
 7ac:	2f 93       	push	r18
 7ae:	3f 93       	push	r19
 7b0:	4f 93       	push	r20
 7b2:	5f 93       	push	r21
 7b4:	6f 93       	push	r22
 7b6:	7f 93       	push	r23
 7b8:	8f 93       	push	r24
 7ba:	9f 93       	push	r25
 7bc:	af 93       	push	r26
 7be:	bf 93       	push	r27
 7c0:	ef 93       	push	r30
 7c2:	ff 93       	push	r31
	//CheckTemperature(),
	CheckSensors(),
 7c4:	0e 94 ab 02 	call	0x556	; 0x556 <CheckSensors>
	CheckPlayers(),
 7c8:	0e 94 61 00 	call	0xc2	; 0xc2 <CheckPlayers>
	cycle = (cycle + 1) % 16,
 7cc:	80 91 f1 02 	lds	r24, 0x02F1	; 0x8002f1 <cycle>
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	01 96       	adiw	r24, 0x01	; 1
 7d4:	8f 70       	andi	r24, 0x0F	; 15
 7d6:	90 78       	andi	r25, 0x80	; 128
 7d8:	99 23       	and	r25, r25
 7da:	24 f4       	brge	.+8      	; 0x7e4 <__vector_7+0x42>
 7dc:	01 97       	sbiw	r24, 0x01	; 1
 7de:	80 6f       	ori	r24, 0xF0	; 240
 7e0:	9f 6f       	ori	r25, 0xFF	; 255
 7e2:	01 96       	adiw	r24, 0x01	; 1
 7e4:	80 93 f1 02 	sts	0x02F1, r24	; 0x8002f1 <cycle>
	Timer1_Init(2); // Reinitialize the timer with the desired denominator
 7e8:	82 e0       	ldi	r24, 0x02	; 2
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	0e 94 49 00 	call	0x92	; 0x92 <Timer1_Init>
}
 7f0:	ff 91       	pop	r31
 7f2:	ef 91       	pop	r30
 7f4:	bf 91       	pop	r27
 7f6:	af 91       	pop	r26
 7f8:	9f 91       	pop	r25
 7fa:	8f 91       	pop	r24
 7fc:	7f 91       	pop	r23
 7fe:	6f 91       	pop	r22
 800:	5f 91       	pop	r21
 802:	4f 91       	pop	r20
 804:	3f 91       	pop	r19
 806:	2f 91       	pop	r18
 808:	0f 90       	pop	r0
 80a:	0f be       	out	0x3f, r0	; 63
 80c:	0f 90       	pop	r0
 80e:	1f 90       	pop	r1
 810:	18 95       	reti

00000812 <main>:
void LCD_Init(void);
void setB(bool door,bool set);
void setD(uint8_t door,bool set);
void open(uint8_t Door);
int main(void){
	ADC_init();
 812:	0e 94 97 02 	call	0x52e	; 0x52e <ADC_init>
	DDRA=0b01111110;//will use PA0 for temp sensor,PA7 for force sensor, the rest are for the LCD
 816:	8e e7       	ldi	r24, 0x7E	; 126
 818:	8a bb       	out	0x1a, r24	; 26
	DDRB=0b11000000; // will use and PB(0-4) for door sensors input, and PB(6-7) for 2 doors
 81a:	80 ec       	ldi	r24, 0xC0	; 192
 81c:	87 bb       	out	0x17, r24	; 23
	DDRD=0b11000011; //will use PD(2-5) for Keypad, and other PD pins for 4 doors
 81e:	83 ec       	ldi	r24, 0xC3	; 195
 820:	81 bb       	out	0x11, r24	; 17
	DDRC=0xFF; // set Pins PC5 for buzzer, PC(0-2) for blu/GRN/red leds,
 822:	8f ef       	ldi	r24, 0xFF	; 255
 824:	84 bb       	out	0x14, r24	; 20
	PORTB=0,PORTC=1,PORTD=0,PORTA=0;_delay_ms(20); //Reset Ports
 826:	18 ba       	out	0x18, r1	; 24
 828:	81 e0       	ldi	r24, 0x01	; 1
 82a:	85 bb       	out	0x15, r24	; 21
 82c:	12 ba       	out	0x12, r1	; 18
 82e:	1b ba       	out	0x1b, r1	; 27
 830:	2f ef       	ldi	r18, 0xFF	; 255
 832:	89 ef       	ldi	r24, 0xF9	; 249
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	21 50       	subi	r18, 0x01	; 1
 838:	80 40       	sbci	r24, 0x00	; 0
 83a:	90 40       	sbci	r25, 0x00	; 0
 83c:	e1 f7       	brne	.-8      	; 0x836 <main+0x24>
 83e:	00 c0       	rjmp	.+0      	; 0x840 <main+0x2e>
 840:	00 00       	nop
	memset(SensorsReadings,0,sizeof(SensorsReadings));
 842:	86 e0       	ldi	r24, 0x06	; 6
 844:	e2 e0       	ldi	r30, 0x02	; 2
 846:	f3 e0       	ldi	r31, 0x03	; 3
 848:	df 01       	movw	r26, r30
 84a:	1d 92       	st	X+, r1
 84c:	8a 95       	dec	r24
 84e:	e9 f7       	brne	.-6      	; 0x84a <main+0x38>
	open(7);
 850:	87 e0       	ldi	r24, 0x07	; 7
 852:	0e 94 da 01 	call	0x3b4	; 0x3b4 <open>
	LCD_Init();BeMessage("HALLO");
 856:	0e 94 40 02 	call	0x480	; 0x480 <LCD_Init>
 85a:	81 ef       	ldi	r24, 0xF1	; 241
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	0e 94 62 02 	call	0x4c4	; 0x4c4 <BeMessage>
 862:	bf ef       	ldi	r27, 0xFF	; 255
 864:	20 e7       	ldi	r18, 0x70	; 112
 866:	82 e0       	ldi	r24, 0x02	; 2
 868:	b1 50       	subi	r27, 0x01	; 1
 86a:	20 40       	sbci	r18, 0x00	; 0
 86c:	80 40       	sbci	r24, 0x00	; 0
 86e:	e1 f7       	brne	.-8      	; 0x868 <__stack+0x9>
 870:	00 c0       	rjmp	.+0      	; 0x872 <__stack+0x13>
 872:	00 00       	nop
	_delay_ms(50);
	while(1){
		CheckSensors();
 874:	0e 94 ab 02 	call	0x556	; 0x556 <CheckSensors>
 878:	fd cf       	rjmp	.-6      	; 0x874 <__stack+0x15>

0000087a <__divmodsi4>:
 87a:	05 2e       	mov	r0, r21
 87c:	97 fb       	bst	r25, 7
 87e:	1e f4       	brtc	.+6      	; 0x886 <__divmodsi4+0xc>
 880:	00 94       	com	r0
 882:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__negsi2>
 886:	57 fd       	sbrc	r21, 7
 888:	07 d0       	rcall	.+14     	; 0x898 <__divmodsi4_neg2>
 88a:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__udivmodsi4>
 88e:	07 fc       	sbrc	r0, 7
 890:	03 d0       	rcall	.+6      	; 0x898 <__divmodsi4_neg2>
 892:	4e f4       	brtc	.+18     	; 0x8a6 <__divmodsi4_exit>
 894:	0c 94 54 04 	jmp	0x8a8	; 0x8a8 <__negsi2>

00000898 <__divmodsi4_neg2>:
 898:	50 95       	com	r21
 89a:	40 95       	com	r20
 89c:	30 95       	com	r19
 89e:	21 95       	neg	r18
 8a0:	3f 4f       	sbci	r19, 0xFF	; 255
 8a2:	4f 4f       	sbci	r20, 0xFF	; 255
 8a4:	5f 4f       	sbci	r21, 0xFF	; 255

000008a6 <__divmodsi4_exit>:
 8a6:	08 95       	ret

000008a8 <__negsi2>:
 8a8:	90 95       	com	r25
 8aa:	80 95       	com	r24
 8ac:	70 95       	com	r23
 8ae:	61 95       	neg	r22
 8b0:	7f 4f       	sbci	r23, 0xFF	; 255
 8b2:	8f 4f       	sbci	r24, 0xFF	; 255
 8b4:	9f 4f       	sbci	r25, 0xFF	; 255
 8b6:	08 95       	ret

000008b8 <__udivmodsi4>:
 8b8:	a1 e2       	ldi	r26, 0x21	; 33
 8ba:	1a 2e       	mov	r1, r26
 8bc:	aa 1b       	sub	r26, r26
 8be:	bb 1b       	sub	r27, r27
 8c0:	fd 01       	movw	r30, r26
 8c2:	0d c0       	rjmp	.+26     	; 0x8de <__udivmodsi4_ep>

000008c4 <__udivmodsi4_loop>:
 8c4:	aa 1f       	adc	r26, r26
 8c6:	bb 1f       	adc	r27, r27
 8c8:	ee 1f       	adc	r30, r30
 8ca:	ff 1f       	adc	r31, r31
 8cc:	a2 17       	cp	r26, r18
 8ce:	b3 07       	cpc	r27, r19
 8d0:	e4 07       	cpc	r30, r20
 8d2:	f5 07       	cpc	r31, r21
 8d4:	20 f0       	brcs	.+8      	; 0x8de <__udivmodsi4_ep>
 8d6:	a2 1b       	sub	r26, r18
 8d8:	b3 0b       	sbc	r27, r19
 8da:	e4 0b       	sbc	r30, r20
 8dc:	f5 0b       	sbc	r31, r21

000008de <__udivmodsi4_ep>:
 8de:	66 1f       	adc	r22, r22
 8e0:	77 1f       	adc	r23, r23
 8e2:	88 1f       	adc	r24, r24
 8e4:	99 1f       	adc	r25, r25
 8e6:	1a 94       	dec	r1
 8e8:	69 f7       	brne	.-38     	; 0x8c4 <__udivmodsi4_loop>
 8ea:	60 95       	com	r22
 8ec:	70 95       	com	r23
 8ee:	80 95       	com	r24
 8f0:	90 95       	com	r25
 8f2:	9b 01       	movw	r18, r22
 8f4:	ac 01       	movw	r20, r24
 8f6:	bd 01       	movw	r22, r26
 8f8:	cf 01       	movw	r24, r30
 8fa:	08 95       	ret

000008fc <strcpy>:
 8fc:	fb 01       	movw	r30, r22
 8fe:	dc 01       	movw	r26, r24
 900:	01 90       	ld	r0, Z+
 902:	0d 92       	st	X+, r0
 904:	00 20       	and	r0, r0
 906:	e1 f7       	brne	.-8      	; 0x900 <strcpy+0x4>
 908:	08 95       	ret

0000090a <sprintf>:
 90a:	ae e0       	ldi	r26, 0x0E	; 14
 90c:	b0 e0       	ldi	r27, 0x00	; 0
 90e:	eb e8       	ldi	r30, 0x8B	; 139
 910:	f4 e0       	ldi	r31, 0x04	; 4
 912:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__prologue_saves__+0x1c>
 916:	0d 89       	ldd	r16, Y+21	; 0x15
 918:	1e 89       	ldd	r17, Y+22	; 0x16
 91a:	86 e0       	ldi	r24, 0x06	; 6
 91c:	8c 83       	std	Y+4, r24	; 0x04
 91e:	1a 83       	std	Y+2, r17	; 0x02
 920:	09 83       	std	Y+1, r16	; 0x01
 922:	8f ef       	ldi	r24, 0xFF	; 255
 924:	9f e7       	ldi	r25, 0x7F	; 127
 926:	9e 83       	std	Y+6, r25	; 0x06
 928:	8d 83       	std	Y+5, r24	; 0x05
 92a:	ae 01       	movw	r20, r28
 92c:	47 5e       	subi	r20, 0xE7	; 231
 92e:	5f 4f       	sbci	r21, 0xFF	; 255
 930:	6f 89       	ldd	r22, Y+23	; 0x17
 932:	78 8d       	ldd	r23, Y+24	; 0x18
 934:	ce 01       	movw	r24, r28
 936:	01 96       	adiw	r24, 0x01	; 1
 938:	0e 94 a7 04 	call	0x94e	; 0x94e <vfprintf>
 93c:	ef 81       	ldd	r30, Y+7	; 0x07
 93e:	f8 85       	ldd	r31, Y+8	; 0x08
 940:	e0 0f       	add	r30, r16
 942:	f1 1f       	adc	r31, r17
 944:	10 82       	st	Z, r1
 946:	2e 96       	adiw	r28, 0x0e	; 14
 948:	e4 e0       	ldi	r30, 0x04	; 4
 94a:	0c 94 62 07 	jmp	0xec4	; 0xec4 <__epilogue_restores__+0x1c>

0000094e <vfprintf>:
 94e:	ab e0       	ldi	r26, 0x0B	; 11
 950:	b0 e0       	ldi	r27, 0x00	; 0
 952:	ed ea       	ldi	r30, 0xAD	; 173
 954:	f4 e0       	ldi	r31, 0x04	; 4
 956:	0c 94 38 07 	jmp	0xe70	; 0xe70 <__prologue_saves__>
 95a:	6c 01       	movw	r12, r24
 95c:	7b 01       	movw	r14, r22
 95e:	8a 01       	movw	r16, r20
 960:	fc 01       	movw	r30, r24
 962:	17 82       	std	Z+7, r1	; 0x07
 964:	16 82       	std	Z+6, r1	; 0x06
 966:	83 81       	ldd	r24, Z+3	; 0x03
 968:	81 ff       	sbrs	r24, 1
 96a:	cc c1       	rjmp	.+920    	; 0xd04 <vfprintf+0x3b6>
 96c:	ce 01       	movw	r24, r28
 96e:	01 96       	adiw	r24, 0x01	; 1
 970:	3c 01       	movw	r6, r24
 972:	f6 01       	movw	r30, r12
 974:	93 81       	ldd	r25, Z+3	; 0x03
 976:	f7 01       	movw	r30, r14
 978:	93 fd       	sbrc	r25, 3
 97a:	85 91       	lpm	r24, Z+
 97c:	93 ff       	sbrs	r25, 3
 97e:	81 91       	ld	r24, Z+
 980:	7f 01       	movw	r14, r30
 982:	88 23       	and	r24, r24
 984:	09 f4       	brne	.+2      	; 0x988 <vfprintf+0x3a>
 986:	ba c1       	rjmp	.+884    	; 0xcfc <vfprintf+0x3ae>
 988:	85 32       	cpi	r24, 0x25	; 37
 98a:	39 f4       	brne	.+14     	; 0x99a <vfprintf+0x4c>
 98c:	93 fd       	sbrc	r25, 3
 98e:	85 91       	lpm	r24, Z+
 990:	93 ff       	sbrs	r25, 3
 992:	81 91       	ld	r24, Z+
 994:	7f 01       	movw	r14, r30
 996:	85 32       	cpi	r24, 0x25	; 37
 998:	29 f4       	brne	.+10     	; 0x9a4 <vfprintf+0x56>
 99a:	b6 01       	movw	r22, r12
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 9a2:	e7 cf       	rjmp	.-50     	; 0x972 <vfprintf+0x24>
 9a4:	91 2c       	mov	r9, r1
 9a6:	21 2c       	mov	r2, r1
 9a8:	31 2c       	mov	r3, r1
 9aa:	ff e1       	ldi	r31, 0x1F	; 31
 9ac:	f3 15       	cp	r31, r3
 9ae:	d8 f0       	brcs	.+54     	; 0x9e6 <vfprintf+0x98>
 9b0:	8b 32       	cpi	r24, 0x2B	; 43
 9b2:	79 f0       	breq	.+30     	; 0x9d2 <vfprintf+0x84>
 9b4:	38 f4       	brcc	.+14     	; 0x9c4 <vfprintf+0x76>
 9b6:	80 32       	cpi	r24, 0x20	; 32
 9b8:	79 f0       	breq	.+30     	; 0x9d8 <vfprintf+0x8a>
 9ba:	83 32       	cpi	r24, 0x23	; 35
 9bc:	a1 f4       	brne	.+40     	; 0x9e6 <vfprintf+0x98>
 9be:	23 2d       	mov	r18, r3
 9c0:	20 61       	ori	r18, 0x10	; 16
 9c2:	1d c0       	rjmp	.+58     	; 0x9fe <vfprintf+0xb0>
 9c4:	8d 32       	cpi	r24, 0x2D	; 45
 9c6:	61 f0       	breq	.+24     	; 0x9e0 <vfprintf+0x92>
 9c8:	80 33       	cpi	r24, 0x30	; 48
 9ca:	69 f4       	brne	.+26     	; 0x9e6 <vfprintf+0x98>
 9cc:	23 2d       	mov	r18, r3
 9ce:	21 60       	ori	r18, 0x01	; 1
 9d0:	16 c0       	rjmp	.+44     	; 0x9fe <vfprintf+0xb0>
 9d2:	83 2d       	mov	r24, r3
 9d4:	82 60       	ori	r24, 0x02	; 2
 9d6:	38 2e       	mov	r3, r24
 9d8:	e3 2d       	mov	r30, r3
 9da:	e4 60       	ori	r30, 0x04	; 4
 9dc:	3e 2e       	mov	r3, r30
 9de:	2a c0       	rjmp	.+84     	; 0xa34 <vfprintf+0xe6>
 9e0:	f3 2d       	mov	r31, r3
 9e2:	f8 60       	ori	r31, 0x08	; 8
 9e4:	1d c0       	rjmp	.+58     	; 0xa20 <vfprintf+0xd2>
 9e6:	37 fc       	sbrc	r3, 7
 9e8:	2d c0       	rjmp	.+90     	; 0xa44 <vfprintf+0xf6>
 9ea:	20 ed       	ldi	r18, 0xD0	; 208
 9ec:	28 0f       	add	r18, r24
 9ee:	2a 30       	cpi	r18, 0x0A	; 10
 9f0:	40 f0       	brcs	.+16     	; 0xa02 <vfprintf+0xb4>
 9f2:	8e 32       	cpi	r24, 0x2E	; 46
 9f4:	b9 f4       	brne	.+46     	; 0xa24 <vfprintf+0xd6>
 9f6:	36 fc       	sbrc	r3, 6
 9f8:	81 c1       	rjmp	.+770    	; 0xcfc <vfprintf+0x3ae>
 9fa:	23 2d       	mov	r18, r3
 9fc:	20 64       	ori	r18, 0x40	; 64
 9fe:	32 2e       	mov	r3, r18
 a00:	19 c0       	rjmp	.+50     	; 0xa34 <vfprintf+0xe6>
 a02:	36 fe       	sbrs	r3, 6
 a04:	06 c0       	rjmp	.+12     	; 0xa12 <vfprintf+0xc4>
 a06:	8a e0       	ldi	r24, 0x0A	; 10
 a08:	98 9e       	mul	r9, r24
 a0a:	20 0d       	add	r18, r0
 a0c:	11 24       	eor	r1, r1
 a0e:	92 2e       	mov	r9, r18
 a10:	11 c0       	rjmp	.+34     	; 0xa34 <vfprintf+0xe6>
 a12:	ea e0       	ldi	r30, 0x0A	; 10
 a14:	2e 9e       	mul	r2, r30
 a16:	20 0d       	add	r18, r0
 a18:	11 24       	eor	r1, r1
 a1a:	22 2e       	mov	r2, r18
 a1c:	f3 2d       	mov	r31, r3
 a1e:	f0 62       	ori	r31, 0x20	; 32
 a20:	3f 2e       	mov	r3, r31
 a22:	08 c0       	rjmp	.+16     	; 0xa34 <vfprintf+0xe6>
 a24:	8c 36       	cpi	r24, 0x6C	; 108
 a26:	21 f4       	brne	.+8      	; 0xa30 <vfprintf+0xe2>
 a28:	83 2d       	mov	r24, r3
 a2a:	80 68       	ori	r24, 0x80	; 128
 a2c:	38 2e       	mov	r3, r24
 a2e:	02 c0       	rjmp	.+4      	; 0xa34 <vfprintf+0xe6>
 a30:	88 36       	cpi	r24, 0x68	; 104
 a32:	41 f4       	brne	.+16     	; 0xa44 <vfprintf+0xf6>
 a34:	f7 01       	movw	r30, r14
 a36:	93 fd       	sbrc	r25, 3
 a38:	85 91       	lpm	r24, Z+
 a3a:	93 ff       	sbrs	r25, 3
 a3c:	81 91       	ld	r24, Z+
 a3e:	7f 01       	movw	r14, r30
 a40:	81 11       	cpse	r24, r1
 a42:	b3 cf       	rjmp	.-154    	; 0x9aa <vfprintf+0x5c>
 a44:	98 2f       	mov	r25, r24
 a46:	9f 7d       	andi	r25, 0xDF	; 223
 a48:	95 54       	subi	r25, 0x45	; 69
 a4a:	93 30       	cpi	r25, 0x03	; 3
 a4c:	28 f4       	brcc	.+10     	; 0xa58 <vfprintf+0x10a>
 a4e:	0c 5f       	subi	r16, 0xFC	; 252
 a50:	1f 4f       	sbci	r17, 0xFF	; 255
 a52:	9f e3       	ldi	r25, 0x3F	; 63
 a54:	99 83       	std	Y+1, r25	; 0x01
 a56:	0d c0       	rjmp	.+26     	; 0xa72 <vfprintf+0x124>
 a58:	83 36       	cpi	r24, 0x63	; 99
 a5a:	31 f0       	breq	.+12     	; 0xa68 <vfprintf+0x11a>
 a5c:	83 37       	cpi	r24, 0x73	; 115
 a5e:	71 f0       	breq	.+28     	; 0xa7c <vfprintf+0x12e>
 a60:	83 35       	cpi	r24, 0x53	; 83
 a62:	09 f0       	breq	.+2      	; 0xa66 <vfprintf+0x118>
 a64:	59 c0       	rjmp	.+178    	; 0xb18 <vfprintf+0x1ca>
 a66:	21 c0       	rjmp	.+66     	; 0xaaa <vfprintf+0x15c>
 a68:	f8 01       	movw	r30, r16
 a6a:	80 81       	ld	r24, Z
 a6c:	89 83       	std	Y+1, r24	; 0x01
 a6e:	0e 5f       	subi	r16, 0xFE	; 254
 a70:	1f 4f       	sbci	r17, 0xFF	; 255
 a72:	88 24       	eor	r8, r8
 a74:	83 94       	inc	r8
 a76:	91 2c       	mov	r9, r1
 a78:	53 01       	movw	r10, r6
 a7a:	13 c0       	rjmp	.+38     	; 0xaa2 <vfprintf+0x154>
 a7c:	28 01       	movw	r4, r16
 a7e:	f2 e0       	ldi	r31, 0x02	; 2
 a80:	4f 0e       	add	r4, r31
 a82:	51 1c       	adc	r5, r1
 a84:	f8 01       	movw	r30, r16
 a86:	a0 80       	ld	r10, Z
 a88:	b1 80       	ldd	r11, Z+1	; 0x01
 a8a:	36 fe       	sbrs	r3, 6
 a8c:	03 c0       	rjmp	.+6      	; 0xa94 <vfprintf+0x146>
 a8e:	69 2d       	mov	r22, r9
 a90:	70 e0       	ldi	r23, 0x00	; 0
 a92:	02 c0       	rjmp	.+4      	; 0xa98 <vfprintf+0x14a>
 a94:	6f ef       	ldi	r22, 0xFF	; 255
 a96:	7f ef       	ldi	r23, 0xFF	; 255
 a98:	c5 01       	movw	r24, r10
 a9a:	0e 94 93 06 	call	0xd26	; 0xd26 <strnlen>
 a9e:	4c 01       	movw	r8, r24
 aa0:	82 01       	movw	r16, r4
 aa2:	f3 2d       	mov	r31, r3
 aa4:	ff 77       	andi	r31, 0x7F	; 127
 aa6:	3f 2e       	mov	r3, r31
 aa8:	16 c0       	rjmp	.+44     	; 0xad6 <vfprintf+0x188>
 aaa:	28 01       	movw	r4, r16
 aac:	22 e0       	ldi	r18, 0x02	; 2
 aae:	42 0e       	add	r4, r18
 ab0:	51 1c       	adc	r5, r1
 ab2:	f8 01       	movw	r30, r16
 ab4:	a0 80       	ld	r10, Z
 ab6:	b1 80       	ldd	r11, Z+1	; 0x01
 ab8:	36 fe       	sbrs	r3, 6
 aba:	03 c0       	rjmp	.+6      	; 0xac2 <vfprintf+0x174>
 abc:	69 2d       	mov	r22, r9
 abe:	70 e0       	ldi	r23, 0x00	; 0
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0x178>
 ac2:	6f ef       	ldi	r22, 0xFF	; 255
 ac4:	7f ef       	ldi	r23, 0xFF	; 255
 ac6:	c5 01       	movw	r24, r10
 ac8:	0e 94 88 06 	call	0xd10	; 0xd10 <strnlen_P>
 acc:	4c 01       	movw	r8, r24
 ace:	f3 2d       	mov	r31, r3
 ad0:	f0 68       	ori	r31, 0x80	; 128
 ad2:	3f 2e       	mov	r3, r31
 ad4:	82 01       	movw	r16, r4
 ad6:	33 fc       	sbrc	r3, 3
 ad8:	1b c0       	rjmp	.+54     	; 0xb10 <vfprintf+0x1c2>
 ada:	82 2d       	mov	r24, r2
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	88 16       	cp	r8, r24
 ae0:	99 06       	cpc	r9, r25
 ae2:	b0 f4       	brcc	.+44     	; 0xb10 <vfprintf+0x1c2>
 ae4:	b6 01       	movw	r22, r12
 ae6:	80 e2       	ldi	r24, 0x20	; 32
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 aee:	2a 94       	dec	r2
 af0:	f4 cf       	rjmp	.-24     	; 0xada <vfprintf+0x18c>
 af2:	f5 01       	movw	r30, r10
 af4:	37 fc       	sbrc	r3, 7
 af6:	85 91       	lpm	r24, Z+
 af8:	37 fe       	sbrs	r3, 7
 afa:	81 91       	ld	r24, Z+
 afc:	5f 01       	movw	r10, r30
 afe:	b6 01       	movw	r22, r12
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 b06:	21 10       	cpse	r2, r1
 b08:	2a 94       	dec	r2
 b0a:	21 e0       	ldi	r18, 0x01	; 1
 b0c:	82 1a       	sub	r8, r18
 b0e:	91 08       	sbc	r9, r1
 b10:	81 14       	cp	r8, r1
 b12:	91 04       	cpc	r9, r1
 b14:	71 f7       	brne	.-36     	; 0xaf2 <vfprintf+0x1a4>
 b16:	e8 c0       	rjmp	.+464    	; 0xce8 <vfprintf+0x39a>
 b18:	84 36       	cpi	r24, 0x64	; 100
 b1a:	11 f0       	breq	.+4      	; 0xb20 <vfprintf+0x1d2>
 b1c:	89 36       	cpi	r24, 0x69	; 105
 b1e:	41 f5       	brne	.+80     	; 0xb70 <vfprintf+0x222>
 b20:	f8 01       	movw	r30, r16
 b22:	37 fe       	sbrs	r3, 7
 b24:	07 c0       	rjmp	.+14     	; 0xb34 <vfprintf+0x1e6>
 b26:	60 81       	ld	r22, Z
 b28:	71 81       	ldd	r23, Z+1	; 0x01
 b2a:	82 81       	ldd	r24, Z+2	; 0x02
 b2c:	93 81       	ldd	r25, Z+3	; 0x03
 b2e:	0c 5f       	subi	r16, 0xFC	; 252
 b30:	1f 4f       	sbci	r17, 0xFF	; 255
 b32:	08 c0       	rjmp	.+16     	; 0xb44 <vfprintf+0x1f6>
 b34:	60 81       	ld	r22, Z
 b36:	71 81       	ldd	r23, Z+1	; 0x01
 b38:	07 2e       	mov	r0, r23
 b3a:	00 0c       	add	r0, r0
 b3c:	88 0b       	sbc	r24, r24
 b3e:	99 0b       	sbc	r25, r25
 b40:	0e 5f       	subi	r16, 0xFE	; 254
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	f3 2d       	mov	r31, r3
 b46:	ff 76       	andi	r31, 0x6F	; 111
 b48:	3f 2e       	mov	r3, r31
 b4a:	97 ff       	sbrs	r25, 7
 b4c:	09 c0       	rjmp	.+18     	; 0xb60 <vfprintf+0x212>
 b4e:	90 95       	com	r25
 b50:	80 95       	com	r24
 b52:	70 95       	com	r23
 b54:	61 95       	neg	r22
 b56:	7f 4f       	sbci	r23, 0xFF	; 255
 b58:	8f 4f       	sbci	r24, 0xFF	; 255
 b5a:	9f 4f       	sbci	r25, 0xFF	; 255
 b5c:	f0 68       	ori	r31, 0x80	; 128
 b5e:	3f 2e       	mov	r3, r31
 b60:	2a e0       	ldi	r18, 0x0A	; 10
 b62:	30 e0       	ldi	r19, 0x00	; 0
 b64:	a3 01       	movw	r20, r6
 b66:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__ultoa_invert>
 b6a:	88 2e       	mov	r8, r24
 b6c:	86 18       	sub	r8, r6
 b6e:	45 c0       	rjmp	.+138    	; 0xbfa <vfprintf+0x2ac>
 b70:	85 37       	cpi	r24, 0x75	; 117
 b72:	31 f4       	brne	.+12     	; 0xb80 <vfprintf+0x232>
 b74:	23 2d       	mov	r18, r3
 b76:	2f 7e       	andi	r18, 0xEF	; 239
 b78:	b2 2e       	mov	r11, r18
 b7a:	2a e0       	ldi	r18, 0x0A	; 10
 b7c:	30 e0       	ldi	r19, 0x00	; 0
 b7e:	25 c0       	rjmp	.+74     	; 0xbca <vfprintf+0x27c>
 b80:	93 2d       	mov	r25, r3
 b82:	99 7f       	andi	r25, 0xF9	; 249
 b84:	b9 2e       	mov	r11, r25
 b86:	8f 36       	cpi	r24, 0x6F	; 111
 b88:	c1 f0       	breq	.+48     	; 0xbba <vfprintf+0x26c>
 b8a:	18 f4       	brcc	.+6      	; 0xb92 <vfprintf+0x244>
 b8c:	88 35       	cpi	r24, 0x58	; 88
 b8e:	79 f0       	breq	.+30     	; 0xbae <vfprintf+0x260>
 b90:	b5 c0       	rjmp	.+362    	; 0xcfc <vfprintf+0x3ae>
 b92:	80 37       	cpi	r24, 0x70	; 112
 b94:	19 f0       	breq	.+6      	; 0xb9c <vfprintf+0x24e>
 b96:	88 37       	cpi	r24, 0x78	; 120
 b98:	21 f0       	breq	.+8      	; 0xba2 <vfprintf+0x254>
 b9a:	b0 c0       	rjmp	.+352    	; 0xcfc <vfprintf+0x3ae>
 b9c:	e9 2f       	mov	r30, r25
 b9e:	e0 61       	ori	r30, 0x10	; 16
 ba0:	be 2e       	mov	r11, r30
 ba2:	b4 fe       	sbrs	r11, 4
 ba4:	0d c0       	rjmp	.+26     	; 0xbc0 <vfprintf+0x272>
 ba6:	fb 2d       	mov	r31, r11
 ba8:	f4 60       	ori	r31, 0x04	; 4
 baa:	bf 2e       	mov	r11, r31
 bac:	09 c0       	rjmp	.+18     	; 0xbc0 <vfprintf+0x272>
 bae:	34 fe       	sbrs	r3, 4
 bb0:	0a c0       	rjmp	.+20     	; 0xbc6 <vfprintf+0x278>
 bb2:	29 2f       	mov	r18, r25
 bb4:	26 60       	ori	r18, 0x06	; 6
 bb6:	b2 2e       	mov	r11, r18
 bb8:	06 c0       	rjmp	.+12     	; 0xbc6 <vfprintf+0x278>
 bba:	28 e0       	ldi	r18, 0x08	; 8
 bbc:	30 e0       	ldi	r19, 0x00	; 0
 bbe:	05 c0       	rjmp	.+10     	; 0xbca <vfprintf+0x27c>
 bc0:	20 e1       	ldi	r18, 0x10	; 16
 bc2:	30 e0       	ldi	r19, 0x00	; 0
 bc4:	02 c0       	rjmp	.+4      	; 0xbca <vfprintf+0x27c>
 bc6:	20 e1       	ldi	r18, 0x10	; 16
 bc8:	32 e0       	ldi	r19, 0x02	; 2
 bca:	f8 01       	movw	r30, r16
 bcc:	b7 fe       	sbrs	r11, 7
 bce:	07 c0       	rjmp	.+14     	; 0xbde <vfprintf+0x290>
 bd0:	60 81       	ld	r22, Z
 bd2:	71 81       	ldd	r23, Z+1	; 0x01
 bd4:	82 81       	ldd	r24, Z+2	; 0x02
 bd6:	93 81       	ldd	r25, Z+3	; 0x03
 bd8:	0c 5f       	subi	r16, 0xFC	; 252
 bda:	1f 4f       	sbci	r17, 0xFF	; 255
 bdc:	06 c0       	rjmp	.+12     	; 0xbea <vfprintf+0x29c>
 bde:	60 81       	ld	r22, Z
 be0:	71 81       	ldd	r23, Z+1	; 0x01
 be2:	80 e0       	ldi	r24, 0x00	; 0
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 5f       	subi	r16, 0xFE	; 254
 be8:	1f 4f       	sbci	r17, 0xFF	; 255
 bea:	a3 01       	movw	r20, r6
 bec:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__ultoa_invert>
 bf0:	88 2e       	mov	r8, r24
 bf2:	86 18       	sub	r8, r6
 bf4:	fb 2d       	mov	r31, r11
 bf6:	ff 77       	andi	r31, 0x7F	; 127
 bf8:	3f 2e       	mov	r3, r31
 bfa:	36 fe       	sbrs	r3, 6
 bfc:	0d c0       	rjmp	.+26     	; 0xc18 <vfprintf+0x2ca>
 bfe:	23 2d       	mov	r18, r3
 c00:	2e 7f       	andi	r18, 0xFE	; 254
 c02:	a2 2e       	mov	r10, r18
 c04:	89 14       	cp	r8, r9
 c06:	58 f4       	brcc	.+22     	; 0xc1e <vfprintf+0x2d0>
 c08:	34 fe       	sbrs	r3, 4
 c0a:	0b c0       	rjmp	.+22     	; 0xc22 <vfprintf+0x2d4>
 c0c:	32 fc       	sbrc	r3, 2
 c0e:	09 c0       	rjmp	.+18     	; 0xc22 <vfprintf+0x2d4>
 c10:	83 2d       	mov	r24, r3
 c12:	8e 7e       	andi	r24, 0xEE	; 238
 c14:	a8 2e       	mov	r10, r24
 c16:	05 c0       	rjmp	.+10     	; 0xc22 <vfprintf+0x2d4>
 c18:	b8 2c       	mov	r11, r8
 c1a:	a3 2c       	mov	r10, r3
 c1c:	03 c0       	rjmp	.+6      	; 0xc24 <vfprintf+0x2d6>
 c1e:	b8 2c       	mov	r11, r8
 c20:	01 c0       	rjmp	.+2      	; 0xc24 <vfprintf+0x2d6>
 c22:	b9 2c       	mov	r11, r9
 c24:	a4 fe       	sbrs	r10, 4
 c26:	0f c0       	rjmp	.+30     	; 0xc46 <vfprintf+0x2f8>
 c28:	fe 01       	movw	r30, r28
 c2a:	e8 0d       	add	r30, r8
 c2c:	f1 1d       	adc	r31, r1
 c2e:	80 81       	ld	r24, Z
 c30:	80 33       	cpi	r24, 0x30	; 48
 c32:	21 f4       	brne	.+8      	; 0xc3c <vfprintf+0x2ee>
 c34:	9a 2d       	mov	r25, r10
 c36:	99 7e       	andi	r25, 0xE9	; 233
 c38:	a9 2e       	mov	r10, r25
 c3a:	09 c0       	rjmp	.+18     	; 0xc4e <vfprintf+0x300>
 c3c:	a2 fe       	sbrs	r10, 2
 c3e:	06 c0       	rjmp	.+12     	; 0xc4c <vfprintf+0x2fe>
 c40:	b3 94       	inc	r11
 c42:	b3 94       	inc	r11
 c44:	04 c0       	rjmp	.+8      	; 0xc4e <vfprintf+0x300>
 c46:	8a 2d       	mov	r24, r10
 c48:	86 78       	andi	r24, 0x86	; 134
 c4a:	09 f0       	breq	.+2      	; 0xc4e <vfprintf+0x300>
 c4c:	b3 94       	inc	r11
 c4e:	a3 fc       	sbrc	r10, 3
 c50:	11 c0       	rjmp	.+34     	; 0xc74 <vfprintf+0x326>
 c52:	a0 fe       	sbrs	r10, 0
 c54:	06 c0       	rjmp	.+12     	; 0xc62 <vfprintf+0x314>
 c56:	b2 14       	cp	r11, r2
 c58:	88 f4       	brcc	.+34     	; 0xc7c <vfprintf+0x32e>
 c5a:	28 0c       	add	r2, r8
 c5c:	92 2c       	mov	r9, r2
 c5e:	9b 18       	sub	r9, r11
 c60:	0e c0       	rjmp	.+28     	; 0xc7e <vfprintf+0x330>
 c62:	b2 14       	cp	r11, r2
 c64:	60 f4       	brcc	.+24     	; 0xc7e <vfprintf+0x330>
 c66:	b6 01       	movw	r22, r12
 c68:	80 e2       	ldi	r24, 0x20	; 32
 c6a:	90 e0       	ldi	r25, 0x00	; 0
 c6c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 c70:	b3 94       	inc	r11
 c72:	f7 cf       	rjmp	.-18     	; 0xc62 <vfprintf+0x314>
 c74:	b2 14       	cp	r11, r2
 c76:	18 f4       	brcc	.+6      	; 0xc7e <vfprintf+0x330>
 c78:	2b 18       	sub	r2, r11
 c7a:	02 c0       	rjmp	.+4      	; 0xc80 <vfprintf+0x332>
 c7c:	98 2c       	mov	r9, r8
 c7e:	21 2c       	mov	r2, r1
 c80:	a4 fe       	sbrs	r10, 4
 c82:	10 c0       	rjmp	.+32     	; 0xca4 <vfprintf+0x356>
 c84:	b6 01       	movw	r22, r12
 c86:	80 e3       	ldi	r24, 0x30	; 48
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 c8e:	a2 fe       	sbrs	r10, 2
 c90:	17 c0       	rjmp	.+46     	; 0xcc0 <vfprintf+0x372>
 c92:	a1 fc       	sbrc	r10, 1
 c94:	03 c0       	rjmp	.+6      	; 0xc9c <vfprintf+0x34e>
 c96:	88 e7       	ldi	r24, 0x78	; 120
 c98:	90 e0       	ldi	r25, 0x00	; 0
 c9a:	02 c0       	rjmp	.+4      	; 0xca0 <vfprintf+0x352>
 c9c:	88 e5       	ldi	r24, 0x58	; 88
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	b6 01       	movw	r22, r12
 ca2:	0c c0       	rjmp	.+24     	; 0xcbc <vfprintf+0x36e>
 ca4:	8a 2d       	mov	r24, r10
 ca6:	86 78       	andi	r24, 0x86	; 134
 ca8:	59 f0       	breq	.+22     	; 0xcc0 <vfprintf+0x372>
 caa:	a1 fe       	sbrs	r10, 1
 cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0x364>
 cae:	8b e2       	ldi	r24, 0x2B	; 43
 cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <vfprintf+0x366>
 cb2:	80 e2       	ldi	r24, 0x20	; 32
 cb4:	a7 fc       	sbrc	r10, 7
 cb6:	8d e2       	ldi	r24, 0x2D	; 45
 cb8:	b6 01       	movw	r22, r12
 cba:	90 e0       	ldi	r25, 0x00	; 0
 cbc:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 cc0:	89 14       	cp	r8, r9
 cc2:	38 f4       	brcc	.+14     	; 0xcd2 <vfprintf+0x384>
 cc4:	b6 01       	movw	r22, r12
 cc6:	80 e3       	ldi	r24, 0x30	; 48
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 cce:	9a 94       	dec	r9
 cd0:	f7 cf       	rjmp	.-18     	; 0xcc0 <vfprintf+0x372>
 cd2:	8a 94       	dec	r8
 cd4:	f3 01       	movw	r30, r6
 cd6:	e8 0d       	add	r30, r8
 cd8:	f1 1d       	adc	r31, r1
 cda:	80 81       	ld	r24, Z
 cdc:	b6 01       	movw	r22, r12
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 ce4:	81 10       	cpse	r8, r1
 ce6:	f5 cf       	rjmp	.-22     	; 0xcd2 <vfprintf+0x384>
 ce8:	22 20       	and	r2, r2
 cea:	09 f4       	brne	.+2      	; 0xcee <vfprintf+0x3a0>
 cec:	42 ce       	rjmp	.-892    	; 0x972 <vfprintf+0x24>
 cee:	b6 01       	movw	r22, r12
 cf0:	80 e2       	ldi	r24, 0x20	; 32
 cf2:	90 e0       	ldi	r25, 0x00	; 0
 cf4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 cf8:	2a 94       	dec	r2
 cfa:	f6 cf       	rjmp	.-20     	; 0xce8 <vfprintf+0x39a>
 cfc:	f6 01       	movw	r30, r12
 cfe:	86 81       	ldd	r24, Z+6	; 0x06
 d00:	97 81       	ldd	r25, Z+7	; 0x07
 d02:	02 c0       	rjmp	.+4      	; 0xd08 <vfprintf+0x3ba>
 d04:	8f ef       	ldi	r24, 0xFF	; 255
 d06:	9f ef       	ldi	r25, 0xFF	; 255
 d08:	2b 96       	adiw	r28, 0x0b	; 11
 d0a:	e2 e1       	ldi	r30, 0x12	; 18
 d0c:	0c 94 54 07 	jmp	0xea8	; 0xea8 <__epilogue_restores__>

00000d10 <strnlen_P>:
 d10:	fc 01       	movw	r30, r24
 d12:	05 90       	lpm	r0, Z+
 d14:	61 50       	subi	r22, 0x01	; 1
 d16:	70 40       	sbci	r23, 0x00	; 0
 d18:	01 10       	cpse	r0, r1
 d1a:	d8 f7       	brcc	.-10     	; 0xd12 <strnlen_P+0x2>
 d1c:	80 95       	com	r24
 d1e:	90 95       	com	r25
 d20:	8e 0f       	add	r24, r30
 d22:	9f 1f       	adc	r25, r31
 d24:	08 95       	ret

00000d26 <strnlen>:
 d26:	fc 01       	movw	r30, r24
 d28:	61 50       	subi	r22, 0x01	; 1
 d2a:	70 40       	sbci	r23, 0x00	; 0
 d2c:	01 90       	ld	r0, Z+
 d2e:	01 10       	cpse	r0, r1
 d30:	d8 f7       	brcc	.-10     	; 0xd28 <strnlen+0x2>
 d32:	80 95       	com	r24
 d34:	90 95       	com	r25
 d36:	8e 0f       	add	r24, r30
 d38:	9f 1f       	adc	r25, r31
 d3a:	08 95       	ret

00000d3c <fputc>:
 d3c:	0f 93       	push	r16
 d3e:	1f 93       	push	r17
 d40:	cf 93       	push	r28
 d42:	df 93       	push	r29
 d44:	fb 01       	movw	r30, r22
 d46:	23 81       	ldd	r18, Z+3	; 0x03
 d48:	21 fd       	sbrc	r18, 1
 d4a:	03 c0       	rjmp	.+6      	; 0xd52 <fputc+0x16>
 d4c:	8f ef       	ldi	r24, 0xFF	; 255
 d4e:	9f ef       	ldi	r25, 0xFF	; 255
 d50:	2c c0       	rjmp	.+88     	; 0xdaa <fputc+0x6e>
 d52:	22 ff       	sbrs	r18, 2
 d54:	16 c0       	rjmp	.+44     	; 0xd82 <fputc+0x46>
 d56:	46 81       	ldd	r20, Z+6	; 0x06
 d58:	57 81       	ldd	r21, Z+7	; 0x07
 d5a:	24 81       	ldd	r18, Z+4	; 0x04
 d5c:	35 81       	ldd	r19, Z+5	; 0x05
 d5e:	42 17       	cp	r20, r18
 d60:	53 07       	cpc	r21, r19
 d62:	44 f4       	brge	.+16     	; 0xd74 <fputc+0x38>
 d64:	a0 81       	ld	r26, Z
 d66:	b1 81       	ldd	r27, Z+1	; 0x01
 d68:	9d 01       	movw	r18, r26
 d6a:	2f 5f       	subi	r18, 0xFF	; 255
 d6c:	3f 4f       	sbci	r19, 0xFF	; 255
 d6e:	31 83       	std	Z+1, r19	; 0x01
 d70:	20 83       	st	Z, r18
 d72:	8c 93       	st	X, r24
 d74:	26 81       	ldd	r18, Z+6	; 0x06
 d76:	37 81       	ldd	r19, Z+7	; 0x07
 d78:	2f 5f       	subi	r18, 0xFF	; 255
 d7a:	3f 4f       	sbci	r19, 0xFF	; 255
 d7c:	37 83       	std	Z+7, r19	; 0x07
 d7e:	26 83       	std	Z+6, r18	; 0x06
 d80:	14 c0       	rjmp	.+40     	; 0xdaa <fputc+0x6e>
 d82:	8b 01       	movw	r16, r22
 d84:	ec 01       	movw	r28, r24
 d86:	fb 01       	movw	r30, r22
 d88:	00 84       	ldd	r0, Z+8	; 0x08
 d8a:	f1 85       	ldd	r31, Z+9	; 0x09
 d8c:	e0 2d       	mov	r30, r0
 d8e:	09 95       	icall
 d90:	89 2b       	or	r24, r25
 d92:	e1 f6       	brne	.-72     	; 0xd4c <fputc+0x10>
 d94:	d8 01       	movw	r26, r16
 d96:	16 96       	adiw	r26, 0x06	; 6
 d98:	8d 91       	ld	r24, X+
 d9a:	9c 91       	ld	r25, X
 d9c:	17 97       	sbiw	r26, 0x07	; 7
 d9e:	01 96       	adiw	r24, 0x01	; 1
 da0:	17 96       	adiw	r26, 0x07	; 7
 da2:	9c 93       	st	X, r25
 da4:	8e 93       	st	-X, r24
 da6:	16 97       	sbiw	r26, 0x06	; 6
 da8:	ce 01       	movw	r24, r28
 daa:	df 91       	pop	r29
 dac:	cf 91       	pop	r28
 dae:	1f 91       	pop	r17
 db0:	0f 91       	pop	r16
 db2:	08 95       	ret

00000db4 <__ultoa_invert>:
 db4:	fa 01       	movw	r30, r20
 db6:	aa 27       	eor	r26, r26
 db8:	28 30       	cpi	r18, 0x08	; 8
 dba:	51 f1       	breq	.+84     	; 0xe10 <__ultoa_invert+0x5c>
 dbc:	20 31       	cpi	r18, 0x10	; 16
 dbe:	81 f1       	breq	.+96     	; 0xe20 <__ultoa_invert+0x6c>
 dc0:	e8 94       	clt
 dc2:	6f 93       	push	r22
 dc4:	6e 7f       	andi	r22, 0xFE	; 254
 dc6:	6e 5f       	subi	r22, 0xFE	; 254
 dc8:	7f 4f       	sbci	r23, 0xFF	; 255
 dca:	8f 4f       	sbci	r24, 0xFF	; 255
 dcc:	9f 4f       	sbci	r25, 0xFF	; 255
 dce:	af 4f       	sbci	r26, 0xFF	; 255
 dd0:	b1 e0       	ldi	r27, 0x01	; 1
 dd2:	3e d0       	rcall	.+124    	; 0xe50 <__ultoa_invert+0x9c>
 dd4:	b4 e0       	ldi	r27, 0x04	; 4
 dd6:	3c d0       	rcall	.+120    	; 0xe50 <__ultoa_invert+0x9c>
 dd8:	67 0f       	add	r22, r23
 dda:	78 1f       	adc	r23, r24
 ddc:	89 1f       	adc	r24, r25
 dde:	9a 1f       	adc	r25, r26
 de0:	a1 1d       	adc	r26, r1
 de2:	68 0f       	add	r22, r24
 de4:	79 1f       	adc	r23, r25
 de6:	8a 1f       	adc	r24, r26
 de8:	91 1d       	adc	r25, r1
 dea:	a1 1d       	adc	r26, r1
 dec:	6a 0f       	add	r22, r26
 dee:	71 1d       	adc	r23, r1
 df0:	81 1d       	adc	r24, r1
 df2:	91 1d       	adc	r25, r1
 df4:	a1 1d       	adc	r26, r1
 df6:	20 d0       	rcall	.+64     	; 0xe38 <__ultoa_invert+0x84>
 df8:	09 f4       	brne	.+2      	; 0xdfc <__ultoa_invert+0x48>
 dfa:	68 94       	set
 dfc:	3f 91       	pop	r19
 dfe:	2a e0       	ldi	r18, 0x0A	; 10
 e00:	26 9f       	mul	r18, r22
 e02:	11 24       	eor	r1, r1
 e04:	30 19       	sub	r19, r0
 e06:	30 5d       	subi	r19, 0xD0	; 208
 e08:	31 93       	st	Z+, r19
 e0a:	de f6       	brtc	.-74     	; 0xdc2 <__ultoa_invert+0xe>
 e0c:	cf 01       	movw	r24, r30
 e0e:	08 95       	ret
 e10:	46 2f       	mov	r20, r22
 e12:	47 70       	andi	r20, 0x07	; 7
 e14:	40 5d       	subi	r20, 0xD0	; 208
 e16:	41 93       	st	Z+, r20
 e18:	b3 e0       	ldi	r27, 0x03	; 3
 e1a:	0f d0       	rcall	.+30     	; 0xe3a <__ultoa_invert+0x86>
 e1c:	c9 f7       	brne	.-14     	; 0xe10 <__ultoa_invert+0x5c>
 e1e:	f6 cf       	rjmp	.-20     	; 0xe0c <__ultoa_invert+0x58>
 e20:	46 2f       	mov	r20, r22
 e22:	4f 70       	andi	r20, 0x0F	; 15
 e24:	40 5d       	subi	r20, 0xD0	; 208
 e26:	4a 33       	cpi	r20, 0x3A	; 58
 e28:	18 f0       	brcs	.+6      	; 0xe30 <__ultoa_invert+0x7c>
 e2a:	49 5d       	subi	r20, 0xD9	; 217
 e2c:	31 fd       	sbrc	r19, 1
 e2e:	40 52       	subi	r20, 0x20	; 32
 e30:	41 93       	st	Z+, r20
 e32:	02 d0       	rcall	.+4      	; 0xe38 <__ultoa_invert+0x84>
 e34:	a9 f7       	brne	.-22     	; 0xe20 <__ultoa_invert+0x6c>
 e36:	ea cf       	rjmp	.-44     	; 0xe0c <__ultoa_invert+0x58>
 e38:	b4 e0       	ldi	r27, 0x04	; 4
 e3a:	a6 95       	lsr	r26
 e3c:	97 95       	ror	r25
 e3e:	87 95       	ror	r24
 e40:	77 95       	ror	r23
 e42:	67 95       	ror	r22
 e44:	ba 95       	dec	r27
 e46:	c9 f7       	brne	.-14     	; 0xe3a <__ultoa_invert+0x86>
 e48:	00 97       	sbiw	r24, 0x00	; 0
 e4a:	61 05       	cpc	r22, r1
 e4c:	71 05       	cpc	r23, r1
 e4e:	08 95       	ret
 e50:	9b 01       	movw	r18, r22
 e52:	ac 01       	movw	r20, r24
 e54:	0a 2e       	mov	r0, r26
 e56:	06 94       	lsr	r0
 e58:	57 95       	ror	r21
 e5a:	47 95       	ror	r20
 e5c:	37 95       	ror	r19
 e5e:	27 95       	ror	r18
 e60:	ba 95       	dec	r27
 e62:	c9 f7       	brne	.-14     	; 0xe56 <__ultoa_invert+0xa2>
 e64:	62 0f       	add	r22, r18
 e66:	73 1f       	adc	r23, r19
 e68:	84 1f       	adc	r24, r20
 e6a:	95 1f       	adc	r25, r21
 e6c:	a0 1d       	adc	r26, r0
 e6e:	08 95       	ret

00000e70 <__prologue_saves__>:
 e70:	2f 92       	push	r2
 e72:	3f 92       	push	r3
 e74:	4f 92       	push	r4
 e76:	5f 92       	push	r5
 e78:	6f 92       	push	r6
 e7a:	7f 92       	push	r7
 e7c:	8f 92       	push	r8
 e7e:	9f 92       	push	r9
 e80:	af 92       	push	r10
 e82:	bf 92       	push	r11
 e84:	cf 92       	push	r12
 e86:	df 92       	push	r13
 e88:	ef 92       	push	r14
 e8a:	ff 92       	push	r15
 e8c:	0f 93       	push	r16
 e8e:	1f 93       	push	r17
 e90:	cf 93       	push	r28
 e92:	df 93       	push	r29
 e94:	cd b7       	in	r28, 0x3d	; 61
 e96:	de b7       	in	r29, 0x3e	; 62
 e98:	ca 1b       	sub	r28, r26
 e9a:	db 0b       	sbc	r29, r27
 e9c:	0f b6       	in	r0, 0x3f	; 63
 e9e:	f8 94       	cli
 ea0:	de bf       	out	0x3e, r29	; 62
 ea2:	0f be       	out	0x3f, r0	; 63
 ea4:	cd bf       	out	0x3d, r28	; 61
 ea6:	09 94       	ijmp

00000ea8 <__epilogue_restores__>:
 ea8:	2a 88       	ldd	r2, Y+18	; 0x12
 eaa:	39 88       	ldd	r3, Y+17	; 0x11
 eac:	48 88       	ldd	r4, Y+16	; 0x10
 eae:	5f 84       	ldd	r5, Y+15	; 0x0f
 eb0:	6e 84       	ldd	r6, Y+14	; 0x0e
 eb2:	7d 84       	ldd	r7, Y+13	; 0x0d
 eb4:	8c 84       	ldd	r8, Y+12	; 0x0c
 eb6:	9b 84       	ldd	r9, Y+11	; 0x0b
 eb8:	aa 84       	ldd	r10, Y+10	; 0x0a
 eba:	b9 84       	ldd	r11, Y+9	; 0x09
 ebc:	c8 84       	ldd	r12, Y+8	; 0x08
 ebe:	df 80       	ldd	r13, Y+7	; 0x07
 ec0:	ee 80       	ldd	r14, Y+6	; 0x06
 ec2:	fd 80       	ldd	r15, Y+5	; 0x05
 ec4:	0c 81       	ldd	r16, Y+4	; 0x04
 ec6:	1b 81       	ldd	r17, Y+3	; 0x03
 ec8:	aa 81       	ldd	r26, Y+2	; 0x02
 eca:	b9 81       	ldd	r27, Y+1	; 0x01
 ecc:	ce 0f       	add	r28, r30
 ece:	d1 1d       	adc	r29, r1
 ed0:	0f b6       	in	r0, 0x3f	; 63
 ed2:	f8 94       	cli
 ed4:	de bf       	out	0x3e, r29	; 62
 ed6:	0f be       	out	0x3f, r0	; 63
 ed8:	cd bf       	out	0x3d, r28	; 61
 eda:	ed 01       	movw	r28, r26
 edc:	08 95       	ret

00000ede <_exit>:
 ede:	f8 94       	cli

00000ee0 <__stop_program>:
 ee0:	ff cf       	rjmp	.-2      	; 0xee0 <__stop_program>
